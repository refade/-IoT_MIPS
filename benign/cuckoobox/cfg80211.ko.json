{
    "info": {
        "added": 1640383601.128218, 
        "started": 1640386406.257044, 
        "duration": 319, 
        "ended": 1640386725.621963, 
        "owner": null, 
        "score": 0.0, 
        "id": 2548143, 
        "category": "file", 
        "git": {
            "head": "0e0d906265199c4f8a2a88928e5f6121c2e5ab54", 
            "fetch_head": "0e0d906265199c4f8a2a88928e5f6121c2e5ab54"
        }, 
        "monitor": "2deb9ccd75d5a7a3fe05b2625b03a8639d6ee36b", 
        "package": "elf", 
        "route": "internet", 
        "custom": null, 
        "machine": {
            "status": "stopped", 
            "name": "Ubuntu1904x641", 
            "label": "Ubuntu1904x641", 
            "platform": "linux", 
            "manager": "VirtualBox", 
            "started_on": "2021-12-24 22:54:11", 
            "shutdown_on": "2021-12-24 22:58:45"
        }, 
        "platform": "linux", 
        "version": "2.0.7", 
        "options": "procmemdump=yes,route=internet"
    }, 
    "signatures": [], 
    "target": {
        "category": "file", 
        "file": {
            "mimetype": "application/x-object", 
            "yara": [], 
            "sha1": "aa804c357dcf00a0c5440765c188527cfc4716f9", 
            "name": "cfg80211.ko", 
            "type": "ELF 32-bit LSB relocatable, MIPS, MIPS32 rel2 version 1 (SYSV), BuildID[sha1]=6e415a2729ea8ec5b179cdc788a910d8e53b4d7c, not stripped", 
            "sha256": "387f5b8579d31c78782051e585a5a757b9a66114feba98ce5b286b7a08b1bc10", 
            "urls": [], 
            "crc32": "EEA531CB", 
            "path": "/srv/cuckoo/cwd/storage/binaries/387f5b8579d31c78782051e585a5a757b9a66114feba98ce5b286b7a08b1bc10", 
            "ssdeep": "24576:VceIxyfGjd0bEq6dB4fbqSdTLePM+ginZ2xrM:iTirtfbqSdTLePM+gYG", 
            "size": 866096, 
            "sha512": "cfb364593e3569c9332259446345b645711ac9e1f125b97c2066b9669049db31f453ea47b55475287933d5ad6e205c4656e6f44c18bc115d2a6eef36d777dcf9", 
            "md5": "df34dfa30b83108d899738cb59a28ce3"
        }, 
        "custom": null
    }, 
    "irma": {
        "status": 0, 
        "probes_finished": 16, 
        "scan_id": "06f229a5-aeba-4b32-9aa1-7136c10d880c", 
        "parent_file_sha256": null, 
        "name": "387f5b8579d31c78782051e585a5a757b9a66114feba98ce5b286b7a08b1bc10", 
        "probes_total": 16, 
        "scan_date": 1640379526, 
        "other_results": [], 
        "submitter": "cli", 
        "file_infos": {
            "mimetype": "ELF 32-bit LSB relocatable, MIPS, MIPS32 rel2 version 1 (SYSV)", 
            "sha1": "aa804c357dcf00a0c5440765c188527cfc4716f9", 
            "tags": [], 
            "timestamp_first_scan": 1640379526.1, 
            "timestamp_last_scan": 1640379535.17, 
            "sha256": "387f5b8579d31c78782051e585a5a757b9a66114feba98ce5b286b7a08b1bc10", 
            "md5": "df34dfa30b83108d899738cb59a28ce3", 
            "size": 866096
        }, 
        "probe_results": {
            "antivirus": {
                "Avast Core Security (Linux)": {
                    "status": 0, 
                    "duration": 0.01, 
                    "version": "3.0.3", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "F-Secure Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 5.59, 
                    "version": "11.10", 
                    "results": null, 
                    "virus_database_version": "2021-10-27_02"
                }, 
                "Windows Defender (Windows)": {
                    "status": 0, 
                    "duration": 0.06, 
                    "version": "1.1.18800.4", 
                    "results": null, 
                    "virus_database_version": "1.355.351.0"
                }, 
                "Comodo Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 2.11, 
                    "version": "1.1.268025.1", 
                    "results": null, 
                    "virus_database_version": "2021-11-02"
                }, 
                "Kaspersky Antivirus (Win)": {
                    "status": 0, 
                    "duration": 2.67, 
                    "version": "21.3", 
                    "results": null, 
                    "virus_database_version": "2021-12-15 12:09:00 (full)"
                }, 
                "ESET NOD32 Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 4.28, 
                    "version": "4.0.96", 
                    "results": null, 
                    "virus_database_version": "6178ebd0-1e722 (2021-10-27)"
                }, 
                "GData (Windows)": {
                    "status": 0, 
                    "duration": 0.19, 
                    "version": "5.5.20197.1358", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Forticlient (Linux)": {
                    "status": 0, 
                    "duration": 3.04, 
                    "version": "unavailable", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "Avira (Windows)": {
                    "status": 0, 
                    "duration": 3.7, 
                    "version": "8.3.64.66", 
                    "results": null, 
                    "virus_database_version": "8.19.1.122"
                }, 
                "eScan Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 3.91, 
                    "version": "7.0.21", 
                    "results": null, 
                    "virus_database_version": "7.90035 (27/10/2021)"
                }, 
                "McAfee CLI scanner (Linux)": {
                    "status": 0, 
                    "duration": 5.63, 
                    "version": "6.0.6.653", 
                    "results": null, 
                    "virus_database_version": "10149"
                }, 
                "Sophos Anti-Virus (Linux)": {
                    "status": 0, 
                    "duration": 6.55, 
                    "version": "5.85.0", 
                    "results": null, 
                    "virus_database_version": "5.88 (26 October 2021)"
                }, 
                "DrWeb Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 0.14, 
                    "version": "11.1.10.2108031732", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }, 
                "ClamAV (Linux)": {
                    "status": 0, 
                    "duration": 0.07, 
                    "version": "0.103.2", 
                    "results": null, 
                    "virus_database_version": "26334"
                }, 
                "Bitdefender Antivirus (Linux)": {
                    "status": 0, 
                    "duration": 6.04, 
                    "version": "7.90123", 
                    "results": null, 
                    "virus_database_version": null
                }, 
                "Emsisoft Commandline Scanner (Windows)": {
                    "status": 0, 
                    "duration": 0.22, 
                    "version": "2021.9.0.11172", 
                    "results": null, 
                    "virus_database_version": "unavailable"
                }
            }
        }, 
        "path": "", 
        "result_id": "5229c0a0-902b-4a1a-ab24-9244bc2fa4b6", 
        "file_sha256": "387f5b8579d31c78782051e585a5a757b9a66114feba98ce5b286b7a08b1bc10"
    }, 
    "suricata": {
        "tls": [
            {
                "src_ip": "192.168.168.101", 
                "version": "TLS 1.2", 
                "src_port": 37978, 
                "dst_port": 443, 
                "timestamp": "2021-12-24T22:54:45.001366+0200", 
                "dst_ip": "91.189.92.20", 
                "fingerprint": "97:63:1b:60:eb:d1:fa:4f:a4:fc:fa:98:66:3d:ee:22:fb:78:ce:c1", 
                "subject": "C=GB, L=London, O=Canonical Group Ltd, CN=api.snapcraft.io", 
                "issuer": "C=US, O=DigiCert Inc, CN=DigiCert TLS RSA SHA256 2020 CA1"
            }
        ], 
        "files": [], 
        "alerts": [], 
        "http": []
    }, 
    "virustotal": {
        "summary": {
            "error": "resource has not been scanned yet"
        }
    }, 
    "network": {
        "udp": [], 
        "dns_servers": [], 
        "http": [], 
        "smtp": [], 
        "tcp": [], 
        "geoinfo": {}, 
        "mitm": [], 
        "https_ex": [], 
        "http_ex": [], 
        "sorted_pcap_sha256": "e3d6eb547aff24c0a27b9c4e61fd2ff808e5ad764a8fee9a6bb7af7596a67554", 
        "icmp": [], 
        "tls": [], 
        "dead_hosts": [], 
        "smtp_ex": [], 
        "hosts": [], 
        "pcap_sha256": "bf2a2e545bea240dfa2ba35a183684ee84c548768d00473184415f79ce02cab5", 
        "dns": [], 
        "domains": [], 
        "irc": []
    }, 
    "resubmit": {
        "resubmit_ids": []
    }, 
    "snort": {
        "alerts": []
    }, 
    "behavior": {
        "generic": [
            {
                "process_path": null, 
                "process_name": "sh", 
                "pid": 2066, 
                "summary": {}, 
                "first_seen": 1640383608.197211, 
                "ppid": -1
            }
        ], 
        "processes": [
            {
                "calls": [
                    {
                        "status": "ENOEXEC", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.197211 sh@7f7fd41e5957[2066] execve(\"/tmp/cfg80211.ko\", [\"/tmp/cfg80211.ko\"], [\"SUDO_GID=0\", \"MAIL=/var/mail/root\", \"USER=root\", \"HOME=/root\", \"SUDO_UID=0\", \"LOGNAME=root\", \"SYSTEMTAP_MODULE=stap_\", \"TERM=unknown\", \"SYSTEMTAP_VERBOSE=2\", \"PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin\", \"DISPLAY=:0\", \"LANG=en_US.UTF-8\", \"XAUTHORITY=/root/.Xauthority\", \"SUDO_COMMAND=/usr/bin/staprun -vv -o stap.log /root/.cuckoo/stap_.ko -c sh -c /tmp/cfg80211.ko\", \"SHELL=/bin/bash\", \"SUDO_USER=root\", \"PWD=/tmp/tmplvEZIA\"]) = -8 (ENOEXEC)\n", 
                        "api": "execve", 
                        "return_value": "-8", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd41e5957", 
                        "arguments": {
                            "p2": [
                                "SUDO_GID=0", 
                                "MAIL=/var/mail/root", 
                                "USER=root", 
                                "HOME=/root", 
                                "SUDO_UID=0", 
                                "LOGNAME=root", 
                                "SYSTEMTAP_MODULE=stap_", 
                                "TERM=unknown", 
                                "SYSTEMTAP_VERBOSE=2", 
                                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin", 
                                "DISPLAY=:0", 
                                "LANG=en_US.UTF-8", 
                                "XAUTHORITY=/root/.Xauthority", 
                                "SUDO_COMMAND=/usr/bin/staprun -vv -o stap.log /root/.cuckoo/stap_.ko -c sh -c /tmp/cfg80211.ko", 
                                "SHELL=/bin/bash", 
                                "SUDO_USER=root", 
                                "PWD=/tmp/tmplvEZIA"
                            ], 
                            "p0": "/tmp/cfg80211.ko", 
                            "p1": [
                                "/tmp/cfg80211.ko"
                            ]
                        }, 
                        "time": 1640383608.197211
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204498 sh@7f7fd4210cce[2066] openat(AT_FDCWD, \"/tmp/cfg80211.ko\", O_RDONLY|O_NOCTTY) = 3\n", 
                        "api": "openat", 
                        "return_value": "3", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd4210cce", 
                        "arguments": {
                            "p2": "O_RDONLY|O_NOCTTY", 
                            "p0": "AT_FDCWD", 
                            "p1": "/tmp/cfg80211.ko"
                        }, 
                        "time": 1640383608.204498
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204536 sh@7f7fd4210f81[2066] read(3, 0x7fff2b426ce0, 128) = 128\n", 
                        "api": "read", 
                        "return_value": "128", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd4210f81", 
                        "arguments": {
                            "p2": "128", 
                            "p0": "3", 
                            "p1": "0x7fff2b426ce0"
                        }, 
                        "time": 1640383608.204536
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204574 sh@7f7fd4211674[2066] close(3) = 0\n", 
                        "api": "close", 
                        "return_value": "0", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd4211674", 
                        "arguments": {
                            "p0": "3"
                        }, 
                        "time": 1640383608.204574
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204645 sh@7f7fd4211024[2066] write(2, \"sh: 1: \", 7) = 7\n", 
                        "api": "write", 
                        "return_value": "7", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd4211024", 
                        "arguments": {
                            "p2": "7", 
                            "p0": "2", 
                            "p1": "sh: 1: "
                        }, 
                        "time": 1640383608.204645
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204684 sh@7f7fd4211024[2066] write(2, \"/tmp/cfg80211.ko: Exec format error\", 35) = 35\n", 
                        "api": "write", 
                        "return_value": "35", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd4211024", 
                        "arguments": {
                            "p2": "35", 
                            "p0": "2", 
                            "p1": "/tmp/cfg80211.ko: Exec format error"
                        }, 
                        "time": 1640383608.204684
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204715 sh@7f7fd4211024[2066] write(2, \"\\n\", 1) = 1\n", 
                        "api": "write", 
                        "return_value": "1", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd4211024", 
                        "arguments": {
                            "p2": "1", 
                            "p0": "2", 
                            "p1": "\n"
                        }, 
                        "time": 1640383608.204715
                    }, 
                    {
                        "status": "", 
                        "process_name": "sh", 
                        "pid": 2066, 
                        "raw": "Fri Dec 24 22:06:48 2021.204748 sh@7f7fd41e5926[2066] exit_group(2)\n", 
                        "api": "exit_group", 
                        "return_value": "", 
                        "category": "process", 
                        "instruction_pointer": "7f7fd41e5926", 
                        "arguments": {
                            "p0": "2"
                        }, 
                        "time": 1640383608.204748
                    }
                ], 
                "pid": 2066, 
                "process_name": "sh", 
                "command_line": "", 
                "first_seen": 1640383608.197211, 
                "ppid": -1, 
                "type": "process"
            }
        ], 
        "processtree": [
            {
                "track": true, 
                "pid": 2066, 
                "process_name": "sh", 
                "command_line": "", 
                "first_seen": 1640383608.197211, 
                "ppid": -1, 
                "children": []
            }
        ]
    }, 
    "debug": {
        "action": [], 
        "dbgview": [], 
        "errors": [], 
        "log": [
            "2021-12-24 22:06:41,001 [root] DEBUG: Starting analyzer from: /tmp/tmplvEZIA\n", 
            "2021-12-24 22:06:41,001 [root] DEBUG: Storing results at: /tmp/ybVWtln\n", 
            "2021-12-24 22:06:43,039 [modules.auxiliary.filecollector] INFO: FileCollector started v0.08\n", 
            "2021-12-24 22:06:43,041 [modules.auxiliary.human] INFO: Human started v0.02\n", 
            "2021-12-24 22:06:43,044 [modules.auxiliary.screenshots] INFO: Screenshots started v0.03\n", 
            "2021-12-24 22:06:48,191 [lib.core.packages] INFO: Process startup took 5.14 seconds\n", 
            "2021-12-24 22:06:48,191 [root] INFO: Added new process to list with pid: 2057\n", 
            "2021-12-24 22:06:54,200 [root] INFO: Process with pid 2057 has terminated\n", 
            "2021-12-24 22:06:54,201 [root] INFO: Process list is empty, terminating analysis.\n", 
            "2021-12-24 22:06:57,204 [lib.core.packages] INFO: Package requested stop\n", 
            "2021-12-24 22:06:57,205 [lib.core.packages] WARNING: Exception uploading log: [Errno 3] No such process\n"
        ], 
        "cuckoo": [
            "2021-12-24 22:54:11,672 [cuckoo.core.scheduler] INFO: Task #2548143: acquired machine Ubuntu1904x641 (label=Ubuntu1904x641)\n", 
            "2021-12-24 22:54:11,673 [cuckoo.core.resultserver] DEBUG: Now tracking machine 192.168.168.101 for task #2548143\n", 
            "2021-12-24 22:54:11,799 [cuckoo.auxiliary.sniffer] INFO: Started sniffer with PID 2891672 (interface=vboxnet0, host=192.168.168.101)\n", 
            "2021-12-24 22:54:11,953 [cuckoo.machinery.virtualbox] DEBUG: Starting vm Ubuntu1904x641\n", 
            "2021-12-24 22:54:12,370 [cuckoo.machinery.virtualbox] DEBUG: Restoring virtual machine Ubuntu1904x641 to Snapshot\n", 
            "2021-12-24 22:54:21,716 [cuckoo.core.guest] INFO: Starting analysis #2548143 on guest (id=Ubuntu1904x641, ip=192.168.168.101)\n", 
            "2021-12-24 22:54:22,720 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: not ready yet\n", 
            "2021-12-24 22:54:27,739 [cuckoo.core.guest] INFO: Guest is running Cuckoo Agent 0.10 (id=Ubuntu1904x641, ip=192.168.168.101)\n", 
            "2021-12-24 22:54:27,770 [cuckoo.core.guest] DEBUG: Uploading analyzer to guest (id=Ubuntu1904x641, ip=192.168.168.101, monitor=latest, size=72028)\n", 
            "2021-12-24 22:54:28,965 [cuckoo.core.resultserver] DEBUG: Task #2548143: live log analysis.log initialized.\n", 
            "2021-12-24 22:54:33,923 [cuckoo.core.resultserver] DEBUG: Task #2548143: File upload for 'shots/0001.jpg'\n", 
            "2021-12-24 22:54:33,951 [cuckoo.core.resultserver] DEBUG: Task #2548143 uploaded file length: 171563\n", 
            "2021-12-24 22:54:42,940 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:54:45,185 [cuckoo.core.resultserver] DEBUG: Task #2548143: File upload for 'logs/all.stap'\n", 
            "2021-12-24 22:54:45,188 [cuckoo.core.resultserver] DEBUG: Task #2548143 uploaded file length: 1187\n", 
            "2021-12-24 22:54:58,009 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:55:13,106 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:55:28,199 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:55:43,314 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:55:58,395 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:56:13,470 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:56:28,524 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:56:43,610 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:56:58,741 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:57:13,840 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:57:28,931 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:57:44,011 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:57:59,103 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:58:14,200 [cuckoo.core.guest] DEBUG: Ubuntu1904x641: analysis #2548143 still processing\n", 
            "2021-12-24 22:58:29,270 [cuckoo.core.guest] INFO: Ubuntu1904x641: end of analysis reached!\n", 
            "2021-12-24 22:58:29,282 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Redsocks\n", 
            "2021-12-24 22:58:29,337 [cuckoo.core.plugins] DEBUG: Stopped auxiliary module: Sniffer\n", 
            "2021-12-24 22:58:41,401 [cuckoo.machinery.virtualbox] INFO: Successfully generated memory dump for virtual machine with label Ubuntu1904x641 to path /srv/cuckoo/cwd/storage/analyses/2548143/memory.dmp\n", 
            "2021-12-24 22:58:41,403 [cuckoo.machinery.virtualbox] DEBUG: Stopping vm Ubuntu1904x641\n", 
            "2021-12-24 22:58:45,286 [cuckoo.core.resultserver] DEBUG: Stopped tracking machine 192.168.168.101 for task #2548143\n", 
            "2021-12-24 22:58:45,286 [cuckoo.core.resultserver] DEBUG: Cancel <Context for LOG> for task 2548143\n", 
            "2021-12-24 22:58:45,405 [cuckoo.core.scheduler] DEBUG: Released database task #2548143\n", 
            "2021-12-24 22:58:45,488 [cuckoo.core.scheduler] INFO: Task #2548143: analysis procedure completed\n"
        ]
    }, 
    "strings": [
        "``A ``A", 
        "c$4%B$4", 
        "``A ``A", 
        "``A ``A", 
        "<@|c$$", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "BB$%  ", 
        "kB$%  ", 
        "H{B$%( ", 
        "``A ``A", 
        "69'%(@", 
        "``A ``A", 
        "`aB$%0`", 
        "&`aB$%8 ", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "``A ``A", 
        "@BB$ff", 
        "cfg80211_disable_40mhz_24ghz", 
        "print_regdomain", 
        "print_rd_rules", 
        "print_regdomain_info", 
        "reg_supported_dfs_region", 
        "regulatory_hint_found_beacon", 
        "regulatory_hint_disconnect", 
        "reg_get_dfs_region", 
        "handle_channel_custom", 
        "reg_check_chans_work", 
        "handle_channel", 
        "ignore_reg_update", 
        "restore_alpha2", 
        "restore_regulatory_settings", 
        "crda_timeout_work", 
        "call_crda", 
        "reg_process_pending_hints", 
        "ieee80211_regdom", 
        "bss_entries_limit", 
        "config", 
        "regulatory", 
        "vendor", 
        "0.F6;H", 
        "cfg80211", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/core.c", 
        "3RTNL: assertion failed at %s (%d)", 
        "phy%d%n", 
        "&rdev->dev_wait", 
        "3cfg80211: failed to rename debugfs dir to %s!", 
        "wlan%d", 
        "&wdev->mtx", 
        "phy80211", 
        "3cfg80211: failed to add phy80211 symlink to netdev!", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/core.h", 
        "ieee80211", 
        "cfg80211", 
        "ieee80211", 
        "addresses", 
        "address_mask", 
        "macaddress", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/util.c", 
        "failed to set key %d", 
        "failed to set defkey %d", 
        "3RTNL: assertion failed at %s (%d)", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/reg.c", 
        "3RTNL: assertion failed at %s (%d)", 
        "COUNTRY=%c%c", 
        "cfg80211: Exceeded CRDA call max attempts. Not calling CRDA", 
        "cfg80211: Calling CRDA for country: %c%c", 
        "cfg80211: Calling CRDA to update world regulatory domain", 
        "cfg80211: Verifying active interfaces after reg change", 
        "driver", 
        "country IE", 
        "Unknown", 
        "cfg80211: %s: device specific dfs_region (%s) disagrees with cfg80211's central dfs_region (%s)", 
        "cfg80211: Ignoring regulatory request set by %s since last_request is not set", 
        "cfg80211: Ignoring regulatory request set by %s since the driver uses its own custom regulatory domain", 
        "cfg80211: Ignoring regulatory request set by %s since the driver requires its own regulatory domain to be set first", 
        "cfg80211: Disabling freq %d MHz for good", 
        "cfg80211: Disabling freq %d MHz", 
        "cfg80211: Disabling freq %d MHz as custom regd has no rule that fits it", 
        "invalid initiator %d", 
        "cfg80211: Pending regulatory request, waiting for it to be processed...", 
        "wiphy should have REGULATORY_CUSTOM_REG", 
        "%d KHz, %d KHz AUTO", 
        "%d KHz", 
        "cfg80211:   (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp), (dfs_cac_time)", 
        "cfg80211:   (%d KHz - %d KHz @ %s), (%d mBi, %d mBm), (%s)", 
        "cfg80211:   (%d KHz - %d KHz @ %s), (N/A, %d mBm), (%s)", 
        "cfg80211: Regulatory domain: %c%c", 
        "wiphy should have REGULATORY_WIPHY_SELF_MANAGED", 
        "Invalid regulatory domain detected", 
        "regulatory", 
        "3cfg80211: kobject_uevent_env() was unable to call CRDA during init", 
        "Unexpected user alpha2: %c%c", 
        "cfg80211: Restoring regulatory settings including user preference", 
        "cfg80211: Keeping preference on module parameter ieee80211_regdom: %c%c", 
        "cfg80211: Restoring regulatory settings while preserving user preference for: %c%c", 
        "cfg80211: Restoring regulatory settings", 
        "cfg80211: Kicking the queue", 
        "cfg80211: Timeout while waiting for CRDA to reply, restoring regulatory settings", 
        "cfg80211: All devices are disconnected, going to restore regulatory settings", 
        "cfg80211: Found new beacon on frequency: %d MHz (Ch %d) on %s", 
        "cfg80211: Ignoring uknown DFS master region: %d", 
        "3cfg80211: Invalid regulatory domain detected: %c%c", 
        "cfg80211:  DFS Master region: %s", 
        "cfg80211: Current regulatory domain updated by AP to: %c%c", 
        "cfg80211: Current regulatory domain intersected:", 
        "cfg80211: World regulatory domain updated:", 
        "cfg80211: Regulatory domain changed to driver built-in settings (unknown country)", 
        "cfg80211: Regulatory domain changed to country: %c%c by Cell Station", 
        "cfg80211: Regulatory domain changed to country: %c%c", 
        "cfg80211", 
        "Regulatory domain: %c%c", 
        " DFS Master region: %s", 
        "Regulatory domain changed to country: %c%c", 
        "Regulatory domain changed to country: %c%c by Cell Station", 
        "Regulatory domain changed to driver built-in settings (unknown country)", 
        "World regulatory domain updated:", 
        "Current regulatory domain intersected:", 
        "Current regulatory domain updated by AP to: %c%c", 
        "Ignoring uknown DFS master region: %d", 
        "  (%d KHz - %d KHz @ %s), (N/A, %d mBm), (%s)", 
        "  (%d KHz - %d KHz @ %s), (%d mBi, %d mBm), (%s)", 
        "  (start_freq - end_freq @ bandwidth), (max_antenna_gain, max_eirp), (dfs_cac_time)", 
        "Found new beacon on frequency: %d MHz (Ch %d) on %s", 
        "All devices are disconnected, going to restore regulatory settings", 
        "Kicking the queue", 
        "Restoring regulatory settings", 
        "Keeping preference on module parameter ieee80211_regdom: %c%c", 
        "Restoring regulatory settings while preserving user preference for: %c%c", 
        "Restoring regulatory settings including user preference", 
        "Pending regulatory request, waiting for it to be processed...", 
        "Disabling freq %d MHz as custom regd has no rule that fits it", 
        "Verifying active interfaces after reg change", 
        "Ignoring regulatory request set by %s since the driver requires its own regulatory domain to be set first", 
        "Ignoring regulatory request set by %s since the driver uses its own custom regulatory domain", 
        "Ignoring regulatory request set by %s since last_request is not set", 
        "Disabling freq %d MHz", 
        "Disabling freq %d MHz for good", 
        "Calling CRDA to update world regulatory domain", 
        "Calling CRDA for country: %c%c", 
        "Exceeded CRDA call max attempts. Not calling CRDA", 
        "Timeout while waiting for CRDA to reply, restoring regulatory settings", 
        "%s: device specific dfs_region (%s) disagrees with cfg80211's central dfs_region (%s)", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/scan.c", 
        "rdev bss entries[%d]/list[empty:%d] corruption", 
        "3RTNL: assertion failed at %s (%d)", 
        "rdev bss entries[%d]/list[len:%d] corruption", 
        "Mesh Network Path Selection Protocol ID: 0x%02X", 
        "Path Selection Metric ID: 0x%02X", 
        "Congestion Control Mode ID: 0x%02X", 
        "Synchronization ID: 0x%02X", 
        "Authentication ID: 0x%02X", 
        "Formation Info: 0x%02X", 
        "Capabilities: 0x%02X", 
        "tsf=%016llx", 
        " Last beacon: %ums ago", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/nl80211.c", 
        "3RTNL: assertion failed at %s (%d)", 
        "/build/linux-e9L2X9/linux-4.9.228/include/net/genetlink.h", 
        "/build/linux-e9L2X9/linux-4.9.228/include/net/netlink.h", 
        "&wdev->mtx", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/core.h", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/mlme.c", 
        "MLME-MICHAELMICFAILURE.indication(keyid=%d %scast addr=%pM)", 
        "3RTNL: assertion failed at %s (%d)", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/ibss.c", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/core.h", 
        "3RTNL: assertion failed at %s (%d)", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/sme.c", 
        "3RTNL: assertion failed at %s (%d)", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/core.h", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/chan.c", 
        "3RTNL: assertion failed at %s (%d)", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/core.h", 
        "unsigned int", 
        "wiphy_name", 
        "char[32]", 
        "(Not configured!)", 
        "%s, wow%s - any: %d, disconnect: %d, magic pkt: %d, gtk rekey failure: %d, eap identify req: %d, four way handshake: %d, rfkill release: %d.", 
        "%s, returned: %d", 
        "%s, %senabled ", 
        "%s, virtual intf name: %s, type: %d", 
        "%s, wdev(%u)", 
        "%s, netdev:%s(%d), type: %d", 
        "%s, netdev:%s(%d), key_index: %u, pairwise: %s, mac addr: %pM", 
        "%s, netdev:%s(%d), key index: %u, unicast: %s, multicast: %s", 
        "%s, netdev:%s(%d), key index: %u", 
        "%s, netdev:%s(%d), AP settings - ssid: %s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, beacon interval: %d, dtim period: %d, hidden ssid: %d, wpa versions: %u, privacy: %s, auth type: %d, inactivity timeout: %d", 
        "%s, netdev:%s(%d)", 
        "%s, netdev:%s(%d), station mac: %pM, station flags mask: %u, station flags set: %u, station modify mask: %u, listen interval: %d, aid: %u, plink action: %u, plink state: %u, uapsd queues: %u, vlan:%s", 
        "%s, netdev:%s(%d), station mac: %pM, subtype: %u, reason_code: %u", 
        "%s, netdev:%s(%d), mac: %pM", 
        "%s, netdev:%s(%d), station mac: %pM, idx: %d", 
        "%s, returned %d", 
        "%s, netdev:%s(%d), destination: %pM, next hop: %pM", 
        "%s, netdev:%s(%d), index: %d, destination: %pM, next hop: %pM", 
        "%s, netdev:%s(%d), destination: %pM, mpp: %pM", 
        "%s, netdev:%s(%d), index: %d, destination: %pM, mpp: %pM", 
        "%s, returned %d. mpath info - generation: %d, filled: %u, frame qlen: %u, sn: %u, metric: %u, exptime: %u, discovery timeout: %u, discovery retries: %u, flags: %u", 
        "%s, netdev:%s(%d), mask: %u", 
        "%s, netdev:%s(%d), use cts prot: %d, use short preamble: %d, use short slot time: %d, ap isolate: %d, ht opmode: %d", 
        "%s, netdev:%s(%d), ac: %d, txop: %u, cwmin: %u, cwmax: %u, aifs: %u", 
        "%s, netdev:%s(%d), band: %d, freq: %u", 
        "%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u", 
        "%s, netdev:%s(%d), auth type: %d, bssid: %pM", 
        "%s, netdev:%s(%d), bssid: %pM, previous bssid: %pM, use mfp: %s, flags: %u", 
        "%s, netdev:%s(%d), bssid: %pM, reason: %u", 
        "%s, netdev:%s(%d), bssid: %pM, reason: %u, local state change: %s", 
        "%s, wdev(%u), cookie: %llu ", 
        "%s, netdev:%s(%d), %senabled, timeout: %d ", 
        "%s, netdev:%s(%d), bssid: %pM, ssid: %s, auth type: %d, privacy: %s, wpa versions: %u, flags: %u, previous bssid: %pM", 
        "%s, netdev:%s(%d), rssi_thold: %d, rssi_hyst: %u ", 
        "%s, netdev:%s(%d), rate: %u, packets: %u, interval: %u", 
        "%s, netdev:%s(%d), reason code: %u", 
        "%s, netdev:%s(%d), bssid: %pM, ssid: %s", 
        "%s, changed: %u", 
        "%s, wdev(%u), type: %u, mbm: %d", 
        "%s, function returns: %d, function filled: %d", 
        "%s, netdev:%s(%d), peer: %pM", 
        "%s, wdev(%u), frame_type: 0x%.2x, reg: %s ", 
        "%s, returned %d, tx: %u, rx: %u", 
        "%s, tx: %u, tx_max: %u, rx: %u, rx_max: %u ", 
        "%s, tx: %u, rx: %u ", 
        "%s, netdev:%s(%d), %pM, action_code: %u, dialog_token: %u, status_code: %u, peer_capability: %u initiator: %s buf: %#.2x ", 
        "%s, netdev:%s(%d), index: %d", 
        "%s, returned: %d, band: %d, freq: %u, channel time: %llu, channel time busy: %llu, channel time extension busy: %llu, channel time rx: %llu, channel time tx: %llu, scan time: %llu, filled: %u, noise: %d", 
        "%s, netdev:%s(%d), %pM, oper: %d", 
        "%s, netdev:%s(%d), %pM", 
        "%s, netdev:%s(%d), bssid: %pM", 
        "%s, wdev(%u), band: %d, freq: %u, duration: %u", 
        "%s, returned %d, cookie: %llu", 
        "%s, wdev(%u), cookie: %llu", 
        "%s, wdev(%u), band: %d, freq: %u, offchan: %s, wait: %u, no cck: %s, dont wait for ack: %s", 
        "%s, netdev:%s(%d), noack_map: %u", 
        "%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, ret: %d", 
        "%s, wdev(%u), master preference: %u, dual: %d", 
        "%s, wdev(%u), master preference: %u, dual: %d, changes: %x", 
        "%s, wdev(%u), type=%u, cookie=%llu", 
        "%s, wdev(%u), cookie=%llu", 
        "%s, netdev:%s(%d), acl policy: %d", 
        "%s, netdev:%s(%d), md: 0x%x", 
        "%s, wdev(%u), proto=%x, duration=%u", 
        "%s, netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, block_tx: %d, count: %u, radar_required: %d", 
        "%s, netdev:%s(%d), num_des: %u", 
        "%s, netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u", 
        "%s, netdev:%s(%d), %pM, TSID %d, UP %d, time %d", 
        "%s, netdev:%s(%d), %pM, TSID %d", 
        "%s, netdev:%s(%d), %pM oper class %d, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u", 
        "returned %s", 
        "netdev:%s(%d), mac: %pM", 
        "netdev:%s(%d)", 
        "netdev:%s(%d), %pM, band: %d, freq: %u", 
        "netdev:%s(%d), ftype:0x%.2x", 
        "netdev:%s(%d), %pM, key type: %d, key id: %d, tsc: %pm", 
        "wdev(%u), cookie: %llu, band: %d, freq: %u, duration: %u", 
        "wdev(%u), cookie: %llu, band: %d, freq: %u", 
        "netdev:%s(%d), %pM", 
        "wdev(%u), freq: %d, sig mbm: %d", 
        "wdev(%u), cookie: %llu, ack: %s", 
        "netdev:%s(%d), rssi event: %d", 
        "%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, iftype=%d check_no_ir=%s", 
        "netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u", 
        "netdev:%s(%d),  event: %d", 
        "netdev:%s(%d), bssid: %pM, band: %d, freq: %u", 
        "netdev:%s(%d) addr:%pM, cookie: %llu, acked: %s", 
        "netdev:%s(%d), peer: %pM, num of lost packets: %u", 
        "netdev:%s(%d), index:%d, bssid: %pM, pre auth: %s", 
        "%s, freq: %d, sig_dbm: %d", 
        "%s, netdev:%s(%d), peer: %pM, oper: %d, reason_code %u", 
        "aborted: %s, scan start (TSF): %llu, tsf_bssid: %pM", 
        "%s, band: %d, freq: %u, %pM, buf: %#.2x, bss_type: %d, privacy: %d", 
        "%s, band: %d, freq: %u(scan_width: %d) signal: %d, tsb:%llu, detect_tsf:%llu, tsf_bssid: %pM", 
        "%pM, band: %d, freq: %u", 
        "ret: %d", 
        "ret: %u", 
        "%s, netdev:%s(%d), target_ap: %pM", 
        "%s, netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, cac_time_ms=%u", 
        "%s, netdev:%s(%d), mcast_rates [2.4GHz=0x%x, 5.2GHz=0x%x, 60GHz=0x%x]", 
        "%s, n_rules=%d", 
        "<noname>", 
        "disconnect", 
        "magic_pkt", 
        "gtk_rekey_failure", 
        "eap_identity_req", 
        "four_way_handshake", 
        "rfkill_release", 
        "valid_wow", 
        "cookie", 
        "enum nl80211_band", 
        "center_freq", 
        "duration", 
        "sig_mbm", 
        "enabled", 
        "vir_intf_name", 
        "__data_loc char[]", 
        "enum nl80211_iftype", 
        "char[16]", 
        "ifindex", 
        "mac_addr", 
        "key_index", 
        "pairwise", 
        "unicast", 
        "multicast", 
        "control_freq", 
        "center_freq1", 
        "center_freq2", 
        "beacon_interval", 
        "dtim_period", 
        "char[32 + 1]", 
        "hidden_ssid", 
        "enum nl80211_hidden_ssid", 
        "wpa_ver", 
        "privacy", 
        "auth_type", 
        "enum nl80211_auth_type", 
        "inactivity_timeout", 
        "__data_loc u8[]", 
        "beacon_ies", 
        "proberesp_ies", 
        "assocresp_ies", 
        "probe_resp", 
        "sta_mac", 
        "sta_flags_mask", 
        "sta_flags_set", 
        "sta_modify_mask", 
        "listen_interval", 
        "capability", 
        "plink_action", 
        "plink_state", 
        "uapsd_queues", 
        "max_sp", 
        "opmode_notif", 
        "opmode_notif_used", 
        "ht_capa", 
        "u8[(int)sizeof(struct ieee80211_ht_cap)]", 
        "vht_capa", 
        "u8[(int)sizeof(struct ieee80211_vht_cap)]", 
        "supported_rates", 
        "ext_capab", 
        "supported_channels", 
        "supported_oper_classes", 
        "subtype", 
        "reason_code", 
        "generation", 
        "connected_time", 
        "inactive_time", 
        "rx_bytes", 
        "tx_bytes", 
        "rx_packets", 
        "tx_packets", 
        "tx_retries", 
        "tx_failed", 
        "rx_dropped_misc", 
        "beacon_loss_count", 
        "next_hop", 
        "filled", 
        "frame_qlen", 
        "metric", 
        "exptime", 
        "discovery_timeout", 
        "discovery_retries", 
        "dot11MeshRetryTimeout", 
        "dot11MeshConfirmTimeout", 
        "dot11MeshHoldingTimeout", 
        "dot11MeshMaxPeerLinks", 
        "dot11MeshMaxRetries", 
        "dot11MeshTTL", 
        "element_ttl", 
        "auto_open_plinks", 
        "dot11MeshNbrOffsetMaxNeighbor", 
        "dot11MeshHWMPmaxPREQretries", 
        "path_refresh_time", 
        "dot11MeshHWMPactivePathTimeout", 
        "min_discovery_timeout", 
        "dot11MeshHWMPpreqMinInterval", 
        "dot11MeshHWMPperrMinInterval", 
        "dot11MeshHWMPnetDiameterTraversalTime", 
        "dot11MeshHWMPRootMode", 
        "dot11MeshHWMPRannInterval", 
        "dot11MeshGateAnnouncementProtocol", 
        "dot11MeshForwarding", 
        "rssi_threshold", 
        "ht_opmode", 
        "dot11MeshHWMPactivePathToRootTimeout", 
        "dot11MeshHWMProotInterval", 
        "dot11MeshHWMPconfirmationInterval", 
        "use_cts_prot", 
        "use_short_preamble", 
        "use_short_slot_time", 
        "ap_isolate", 
        "enum nl80211_ac", 
        "prev_bssid", 
        "use_mfp", 
        "local_state_change", 
        "timeout", 
        "wpa_versions", 
        "rssi_thold", 
        "rssi_hyst", 
        "changed", 
        "enum nl80211_tx_power_setting", 
        "func_ret", 
        "func_fill", 
        "frame_type", 
        "tx_max", 
        "rx_max", 
        "action_code", 
        "dialog_token", 
        "status_code", 
        "peer_capability", 
        "initiator", 
        "time_busy", 
        "time_ext_busy", 
        "time_rx", 
        "time_tx", 
        "time_scan", 
        "enum nl80211_tdls_operation", 
        "offchan", 
        "no_cck", 
        "dont_wait_for_ack", 
        "noack_map", 
        "master_pref", 
        "changes", 
        "func_type", 
        "acl_policy", 
        "radar_required", 
        "block_tx", 
        "bcn_ofs", 
        "__data_loc u16[]", 
        "pres_ofs", 
        "num_des", 
        "dscp_exception", 
        "u8[2 * 21]", 
        "u8[16]", 
        "user_prio", 
        "admitted_time", 
        "oper_class", 
        "macaddr", 
        "key_type", 
        "enum nl80211_key_type", 
        "key_id", 
        "rssi_event", 
        "enum nl80211_cqm_rssi_threshold_event", 
        "iftype", 
        "check_no_ir", 
        "enum nl80211_radar_event", 
        "num_packets", 
        "preauth", 
        "sig_dbm", 
        "n_channels", 
        "u32[NUM_NL80211_BANDS]", 
        "wdev_id", 
        "wiphy_mac", 
        "aborted", 
        "scan_start_tsf", 
        "tsf_bssid", 
        "bss_type", 
        "enum ieee80211_bss_type", 
        "enum ieee80211_privacy", 
        "scan_width", 
        "enum nl80211_bss_scan_width", 
        "signal", 
        "ts_boottime", 
        "parent_tsf", 
        "parent_bssid", 
        "non_wireless", 
        "pattern_idx", 
        "packet_len", 
        "packet", 
        "target_ap", 
        "ric_ies", 
        "cac_time_ms", 
        "mcast_rate", 
        "int[NUM_NL80211_BANDS]", 
        "n_rules", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/ocb.c", 
        "IEEE 802.11", 
        "/build/linux-e9L2X9/linux-4.9.228/net/wireless/wext-sme.c", 
        "3RTNL: assertion failed at %s (%d)", 
        "cfg80211_stop_iface", 
        "cfg80211_unregister_wdev", 
        "wiphy_rfkill_set_hw_state", 
        "wiphy_free", 
        "wiphy_unregister", 
        "wiphy_rfkill_stop_polling", 
        "wiphy_rfkill_start_polling", 
        "wiphy_register", 
        "wiphy_new_nm", 
        "cfg80211_shutdown_all_interfaces", 
        "ieee80211_radiotap_iterator_next", 
        "ieee80211_radiotap_iterator_init", 
        "cfg80211_send_layer2_update", 
        "bridge_tunnel_header", 
        "rfc1042_header", 
        "cfg80211_free_nan_func", 
        "cfg80211_get_station", 
        "ieee80211_get_num_supported_channels", 
        "cfg80211_check_combinations", 
        "cfg80211_iter_combinations", 
        "ieee80211_chandef_to_operating_class", 
        "ieee80211_operating_class_to_band", 
        "ieee80211_ie_split_ric", 
        "cfg80211_get_p2p_attr", 
        "cfg80211_calculate_bitrate", 
        "ieee80211_bss_get_ie", 
        "cfg80211_classify8021d", 
        "ieee80211_amsdu_to_8023s", 
        "ieee80211_data_from_8023", 
        "ieee80211_data_to_8023_exthdr", 
        "ieee80211_get_mesh_hdrlen", 
        "ieee80211_get_hdrlen_from_skb", 
        "ieee80211_hdrlen", 
        "__ieee80211_get_channel", 
        "ieee80211_frequency_to_channel", 
        "ieee80211_channel_to_frequency", 
        "ieee80211_mandatory_rates", 
        "ieee80211_get_response_rate", 
        "regulatory_set_wiphy_regd_sync_rtnl", 
        "regulatory_set_wiphy_regd", 
        "regulatory_hint", 
        "wiphy_apply_custom_regulatory", 
        "reg_initiator_name", 
        "freq_reg_info", 
        "cfg80211_wext_giwscan", 
        "cfg80211_wext_siwscan", 
        "cfg80211_unlink_bss", 
        "cfg80211_put_bss", 
        "cfg80211_ref_bss", 
        "cfg80211_inform_bss_frame_data", 
        "cfg80211_inform_bss_data", 
        "cfg80211_get_bss", 
        "cfg80211_find_vendor_ie", 
        "cfg80211_find_ie_match", 
        "cfg80211_sched_scan_stopped", 
        "cfg80211_sched_scan_stopped_rtnl", 
        "cfg80211_sched_scan_results", 
        "cfg80211_scan_done", 
        "cfg80211_crit_proto_stopped", 
        "cfg80211_ft_event", 
        "cfg80211_tdls_oper_request", 
        "cfg80211_report_wowlan_wakeup", 
        "cfg80211_report_obss_beacon", 
        "cfg80211_probe_status", 
        "cfg80211_ch_switch_started_notify", 
        "cfg80211_ch_switch_notify", 
        "cfg80211_pmksa_candidate_notify", 
        "cfg80211_gtk_rekey_notify", 
        "cfg80211_cqm_beacon_loss_notify", 
        "cfg80211_cqm_pktloss_notify", 
        "cfg80211_cqm_txe_notify", 
        "cfg80211_cqm_rssi_notify", 
        "cfg80211_mgmt_tx_status", 
        "cfg80211_rx_unexpected_4addr_frame", 
        "cfg80211_rx_spurious_frame", 
        "cfg80211_conn_failed", 
        "cfg80211_del_sta_sinfo", 
        "cfg80211_new_sta", 
        "cfg80211_remain_on_channel_expired", 
        "cfg80211_ready_on_channel", 
        "cfg80211_notify_new_peer_candidate", 
        "cfg80211_rx_unprot_mlme_mgmt", 
        "cfg80211_vendor_cmd_reply", 
        "__cfg80211_alloc_reply_skb", 
        "cfg80211_nan_func_terminated", 
        "cfg80211_nan_match", 
        "__cfg80211_send_event_skb", 
        "__cfg80211_alloc_event_skb", 
        "cfg80211_check_station_change", 
        "cfg80211_cac_event", 
        "cfg80211_radar_event", 
        "cfg80211_rx_mgmt", 
        "cfg80211_michael_mic_failure", 
        "cfg80211_tx_mlme_mgmt", 
        "cfg80211_abandon_assoc", 
        "cfg80211_assoc_timeout", 
        "cfg80211_auth_timeout", 
        "cfg80211_rx_mlme_mgmt", 
        "cfg80211_rx_assoc_resp", 
        "cfg80211_ibss_joined", 
        "cfg80211_disconnected", 
        "cfg80211_roamed_bss", 
        "cfg80211_roamed", 
        "cfg80211_connect_bss", 
        "cfg80211_reg_can_beacon_relax", 
        "cfg80211_reg_can_beacon", 
        "cfg80211_chandef_usable", 
        "cfg80211_chandef_dfs_required", 
        "cfg80211_chandef_compatible", 
        "cfg80211_chandef_valid", 
        "cfg80211_chandef_create", 
        "cfg80211_get_drvinfo", 
        "cfg80211_wext_giwretry", 
        "cfg80211_wext_giwfrag", 
        "cfg80211_wext_siwfrag", 
        "cfg80211_wext_giwrts", 
        "cfg80211_wext_siwrts", 
        "cfg80211_wext_giwrange", 
        "cfg80211_wext_giwmode", 
        "cfg80211_wext_siwmode", 
        "cfg80211_wext_giwname", 
        "parm=cfg80211_disable_40mhz_24ghz:Disable 40MHz support in the 2.4GHz band", 
        "parmtype=cfg80211_disable_40mhz_24ghz:bool", 
        "alias=net-pf-16-proto-16-family-nl80211", 
        "description=wireless configuration support", 
        "license=GPL", 
        "author=Johannes Berg", 
        "parm=ieee80211_regdom:IEEE 802.11 regulatory domain code", 
        "parmtype=ieee80211_regdom:charp", 
        "parm=bss_entries_limit:limit to number of scan BSS entries (per wiphy, default 1000)", 
        "parmtype=bss_entries_limit:int", 
        "depends=rfkill", 
        "intree=Y", 
        "vermagic=4.9.0-13-4kc-malta mod_unload modversions MIPS32_R2 32BIT ", 
        "rdev_abort_scan", 
        "rdev_set_coalesce", 
        "rdev_set_mcast_rate", 
        "rdev_start_radar_detection", 
        "cfg80211_stop_iface", 
        "cfg80211_ft_event", 
        "cfg80211_report_wowlan_wakeup", 
        "cfg80211_return_u32", 
        "cfg80211_return_uint", 
        "cfg80211_return_bss", 
        "cfg80211_inform_bss_frame", 
        "cfg80211_get_bss", 
        "cfg80211_sched_scan_stopped", 
        "cfg80211_sched_scan_results", 
        "cfg80211_scan_done", 
        "cfg80211_tdls_oper_request", 
        "cfg80211_report_obss_beacon", 
        "cfg80211_pmksa_candidate_notify", 
        "cfg80211_gtk_rekey_notify", 
        "cfg80211_cqm_pktloss_notify", 
        "cfg80211_probe_status", 
        "cfg80211_ibss_joined", 
        "cfg80211_rx_unexpected_4addr_frame", 
        "cfg80211_rx_spurious_frame", 
        "cfg80211_cac_event", 
        "cfg80211_radar_event", 
        "cfg80211_ch_switch_started_notify", 
        "cfg80211_ch_switch_notify", 
        "cfg80211_chandef_dfs_required", 
        "cfg80211_reg_can_beacon", 
        "cfg80211_cqm_rssi_notify", 
        "cfg80211_mgmt_tx_status", 
        "cfg80211_rx_mgmt", 
        "cfg80211_del_sta", 
        "cfg80211_new_sta", 
        "cfg80211_ready_on_channel_expired", 
        "cfg80211_ready_on_channel", 
        "cfg80211_michael_mic_failure", 
        "cfg80211_send_assoc_timeout", 
        "cfg80211_send_auth_timeout", 
        "cfg80211_tx_mlme_mgmt", 
        "cfg80211_rx_mlme_mgmt", 
        "cfg80211_rx_unprot_mlme_mgmt", 
        "cfg80211_send_rx_assoc", 
        "cfg80211_send_rx_auth", 
        "cfg80211_notify_new_peer_candidate", 
        "cfg80211_return_bool", 
        "rdev_tdls_cancel_channel_switch", 
        "rdev_tdls_channel_switch", 
        "rdev_del_tx_ts", 
        "rdev_add_tx_ts", 
        "rdev_set_ap_chanwidth", 
        "rdev_set_qos_map", 
        "rdev_channel_switch", 
        "rdev_crit_proto_stop", 
        "rdev_crit_proto_start", 
        "rdev_update_ft_ies", 
        "rdev_set_mac_acl", 
        "rdev_del_nan_func", 
        "rdev_add_nan_func", 
        "rdev_stop_nan", 
        "rdev_nan_change_conf", 
        "rdev_start_nan", 
        "rdev_stop_p2p_device", 
        "rdev_start_p2p_device", 
        "rdev_return_chandef", 
        "rdev_get_channel", 
        "rdev_set_noack_map", 
        "rdev_mgmt_tx", 
        "rdev_cancel_remain_on_channel", 
        "rdev_return_int_cookie", 
        "rdev_remain_on_channel", 
        "rdev_del_pmksa", 
        "rdev_set_pmksa", 
        "rdev_probe_client", 
        "rdev_tdls_oper", 
        "rdev_return_int_survey_info", 
        "rdev_dump_survey", 
        "rdev_tdls_mgmt", 
        "rdev_sched_scan_start", 
        "rdev_set_antenna", 
        "rdev_return_void_tx_rx", 
        "rdev_return_int_tx_rx", 
        "rdev_mgmt_frame_register", 
        "rdev_set_bitrate_mask", 
        "rdev_return_int_int", 
        "rdev_set_tx_power", 
        "rdev_get_tx_power", 
        "rdev_set_wiphy_params", 
        "rdev_join_ocb", 
        "rdev_join_ibss", 
        "rdev_disconnect", 
        "rdev_set_cqm_txe_config", 
        "rdev_set_cqm_rssi_config", 
        "rdev_connect", 
        "rdev_set_power_mgmt", 
        "rdev_mgmt_tx_cancel_wait", 
        "rdev_disassoc", 
        "rdev_deauth", 
        "rdev_assoc", 
        "rdev_auth", 
        "rdev_set_monitor_channel", 
        "rdev_libertas_set_mesh_channel", 
        "rdev_set_txq_params", 
        "rdev_change_bss", 
        "rdev_join_mesh", 
        "rdev_update_mesh_config", 
        "rdev_return_int_mesh_config", 
        "rdev_return_int_mpath_info", 
        "rdev_dump_mpp", 
        "rdev_get_mpp", 
        "rdev_dump_mpath", 
        "rdev_get_mpath", 
        "rdev_change_mpath", 
        "rdev_add_mpath", 
        "rdev_return_int_station_info", 
        "rdev_dump_station", 
        "rdev_set_wds_peer", 
        "rdev_del_mpath", 
        "rdev_get_station", 
        "rdev_del_station", 
        "rdev_change_station", 
        "rdev_add_station", 
        "rdev_flush_pmksa", 
        "rdev_leave_ocb", 
        "rdev_leave_ibss", 
        "rdev_leave_mesh", 
        "rdev_get_mesh_config", 
        "rdev_set_rekey_data", 
        "rdev_sched_scan_stop", 
        "rdev_stop_ap", 
        "rdev_change_beacon", 
        "rdev_start_ap", 
        "rdev_set_default_mgmt_key", 
        "rdev_set_default_key", 
        "rdev_del_key", 
        "rdev_get_key", 
        "rdev_add_key", 
        "rdev_change_virtual_intf", 
        "rdev_del_virtual_intf", 
        "rdev_return_wdev", 
        "rdev_add_virtual_intf", 
        "rdev_set_wakeup", 
        "rdev_rfkill_poll", 
        "rdev_get_antenna", 
        "rdev_return_void", 
        "rdev_resume", 
        "rdev_scan", 
        "rdev_return_int", 
        "rdev_suspend", 
        "4Fmodule_layout", 
        "flush_work", 
        "3-system_wq", 
        "kmalloc_caches", 
        "e__list_del_entry", 
        "__kmalloc", 
        "\\@get_seconds", 
        "rfkill_set_sw_state", 
        "_mcount", 
        "get_net_ns_by_fd", 
        "register_pernet_device", 
        "Gsystem_power_efficient_wq", 
        "qdebugfs_create_dir", 
        "mem_map", 
        "param_ops_int", 
        "strlen", 
        "C__alloc_workqueue_key", 
        "Hgenl_unregister_family", 
        "netlink_register_notifier", 
        "rtnl_lock", 
        ")!dev_change_net_namespace", 
        "sock_release", 
        "kdelayed_work_timer_fn", 
        "register_netdevice_notifier", 
        "Bcancel_work_sync", 
        "i__dynamic_pr_debug", 
        "kmemdup", 
        "netlink_unregister_notifier", 
        "param_ops_bool", 
        "^init_timer_key", 
        "cancel_delayed_work_sync", 
        "bmutex_unlock", 
        "__genl_register_family", 
        "rfkill_register", 
        "trace_event_buffer_reserve", 
        "(platform_device_register_full", 
        "debugfs_rename", 
        "get_net_ns_by_pid", 
        "sprintf", 
        "debugfs_remove_recursive", 
        "__put_net", 
        "jiffies", 
        "__list_add", 
        "unregister_netdevice_notifier", 
        "skb_trim", 
        "__netdev_alloc_skb", 
        "__pskb_pull_tail", 
        "c__init_waitqueue_head", 
        "nla_memcpy", 
        "_param_ops_charp", 
        "trace_define_field", 
        "+memset", 
        "dmnetif_rx_ni", 
        "cancel_delayed_work", 
        "device_del", 
        "_ctype", 
        "7jiffies_to_msecs", 
        "rfkill_alloc", 
        "__mutex_init", 
        "'printk", 
        " sscanf", 
        "?<__local_bh_enable_ip", 
        "qmemcmp", 
        "unregister_pernet_device", 
        "class_unregister", 
        "mod_delayed_work_on", 
        "rfkill_set_hw_state", 
        "_cond_resched", 
        "Mrb_erase", 
        "trace_event_reg", 
        "nla_put", 
        "wireless_send_event", 
        "Idebugfs_remove", 
        "sstrlcpy", 
        "warn_slowpath_null", 
        "skb_push", 
        "mutex_lock", 
        "destroy_workqueue", 
        "dev_close", 
        "list_del", 
        "dev_get_by_index", 
        "synchronize_sched", 
        "netlink_unicast", 
        "platform_device_unregister", 
        "!init_uts_ns", 
        "__sw_hweight8", 
        "99rfkill_pause_polling", 
        "sysfs_remove_link", 
        "device_add", 
        "fskb_pull", 
        "init_net", 
        "__class_register", 
        "perf_trace_run_bpf_submit", 
        "g[|__dev_get_by_index", 
        "Iperf_trace_buf_alloc", 
        "%binit_wait_entry", 
        "kkobject_uevent_env", 
        "inet_csk_get_port", 
        "rfkill_resume_polling", 
        "sysfs_create_link", 
        "r__alloc_skb", 
        "net_ns_type_operations", 
        "nnetlink_broadcast", 
        "KFtrace_event_ignore_this_pid", 
        "cJ:put_device", 
        "Xqueue_delayed_work_on", 
        "__stack_chk_fail", 
        "9Onla_parse", 
        "schedule", 
        "&kfree_skb", 
        "-kdump_stack", 
        "wireless_nlevent_flush", 
        "\\eth_type_trans", 
        "%trace_event_buffer_commit", 
        "__list_add_rcu", 
        "ypskb_expand_head", 
        "3device_rename", 
        "netdev_err", 
        "kmem_cache_alloc_trace", 
        "rb_insert_color", 
        "__wake_up", 
        "'event_triggers_call", 
        "genlmsg_multicast_allns", 
        "prepare_to_wait_event", 
        "warn_slowpath_fmt", 
        "rfkill_destroy", 
        "memcpy", 
        "trace_event_raw_init", 
        ">dcall_rcu_sched", 
        "genlmsg_put", 
        "UR?uskb_add_rx_frag", 
        "device_initialize", 
        "rfkill_blocked", 
        "scnprintf", 
        "t__sw_hweight32", 
        "Dzkzfree", 
        "finish_wait", 
        "nla_put_64bit", 
        "__stack_chk_guard", 
        "trace_raw_output_prep", 
        "queue_work_on", 
        "snprintf", 
        "<trace_seq_printf", 
        "consume_skb", 
        "$dev_set_name", 
        "rtnl_is_locked", 
        "OgW__sw_hweight16", 
        "__msecs_to_jiffies", 
        "skb_put", 
        "rfkill_unregister", 
        "|skb_copy_bits", 
        "rnrtnl_unlock", 
        "__sock_create", 
        "nl80211", 
        "\"%s, n_rules=%d\", REC->wiphy_name, REC->n_rules", 
        "\"%s, netdev:%s(%d), mcast_rates [2.4GHz=0x%x, 5.2GHz=0x%x, 60GHz=0x%x]\", REC->wiphy_name, REC->name, REC->ifindex, REC->mcast_rate[NL80211_BAND_2GHZ], REC->mcast_rate[NL80211_BAND_5GHZ], REC->mcast_rate[NL80211_BAND_60GHZ]", 
        "\"%s, netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, cac_time_ms=%u\", REC->wiphy_name, REC->name, REC->ifindex, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2, REC->cac_time_ms", 
        "\"%s, wdev(%u)\", REC->wiphy_name, (REC->id)", 
        "\"%s, netdev:%s(%d), target_ap: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->target_ap)", 
        "\"%s, wdev(%u)\", REC->wiphy_name, (REC->id)", 
        "\"ret: %u\", REC->ret", 
        "\"ret: %d\", REC->ret", 
        "\"%pM, band: %d, freq: %u\", (REC->bssid), REC->band, REC->center_freq", 
        "\"%s, band: %d, freq: %u(scan_width: %d) signal: %d, tsb:%llu, detect_tsf:%llu, tsf_bssid: %pM\", REC->wiphy_name, REC->band, REC->center_freq, REC->scan_width, REC->signal, (unsigned long long)REC->ts_boottime, (unsigned long long)REC->parent_tsf, (REC->parent_bssid)", 
        "\"%s, band: %d, freq: %u, %pM, buf: %#.2x, bss_type: %d, privacy: %d\", REC->wiphy_name, REC->band, REC->center_freq, (REC->bssid), ((u8 *)__get_dynamic_array(ssid))[0], REC->bss_type, REC->privacy", 
        "\"aborted: %s, scan start (TSF): %llu, tsf_bssid: %pM\", (REC->aborted) ? \"true\" : \"false\", (unsigned long long)REC->scan_start_tsf, (REC->tsf_bssid)", 
        "\"%s, netdev:%s(%d), peer: %pM, oper: %d, reason_code %u\", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer), REC->oper, REC->reason_code", 
        "\"%s, freq: %d, sig_dbm: %d\", REC->wiphy_name, REC->freq, REC->sig_dbm", 
        "\"netdev:%s(%d), index:%d, bssid: %pM, pre auth: %s\", REC->name, REC->ifindex, REC->index, (REC->bssid), (REC->preauth) ? \"true\" : \"false\"", 
        "\"netdev:%s(%d), peer: %pM, num of lost packets: %u\", REC->name, REC->ifindex, (REC->peer), REC->num_packets", 
        "\"netdev:%s(%d) addr:%pM, cookie: %llu, acked: %s\", REC->name, REC->ifindex, (REC->addr), REC->cookie, (REC->acked) ? \"true\" : \"false\"", 
        "\"netdev:%s(%d), bssid: %pM, band: %d, freq: %u\", REC->name, REC->ifindex, (REC->bssid), REC->band, REC->center_freq", 
        "\"netdev:%s(%d), %pM\", REC->name, REC->ifindex, (REC->addr)", 
        "\"netdev:%s(%d),  event: %d\", REC->name, REC->ifindex, REC->evt", 
        "\"%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->wiphy_name, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->name, REC->ifindex, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->name, REC->ifindex, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->wiphy_name, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, iftype=%d check_no_ir=%s\", REC->wiphy_name, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2, REC->iftype, (REC->check_no_ir) ? \"true\" : \"false\"", 
        "\"netdev:%s(%d), rssi event: %d\", REC->name, REC->ifindex, REC->rssi_event", 
        "\"wdev(%u), cookie: %llu, ack: %s\", (REC->id), REC->cookie, (REC->ack) ? \"true\" : \"false\"", 
        "\"wdev(%u), freq: %d, sig mbm: %d\", (REC->id), REC->freq, REC->sig_mbm", 
        "\"netdev:%s(%d), %pM\", REC->name, REC->ifindex, (REC->mac_addr)", 
        "\"wdev(%u), cookie: %llu, band: %d, freq: %u\", (REC->id), REC->cookie, REC->band, REC->center_freq", 
        "\"wdev(%u), cookie: %llu, band: %d, freq: %u, duration: %u\", (REC->id), REC->cookie, REC->band, REC->center_freq, REC->duration", 
        "\"netdev:%s(%d), %pM, key type: %d, key id: %d, tsc: %pm\", REC->name, REC->ifindex, (REC->addr), REC->key_type, REC->key_id, REC->tsc", 
        "\"netdev:%s(%d), mac: %pM\", REC->name, REC->ifindex, (REC->mac)", 
        "\"netdev:%s(%d), ftype:0x%.2x\", REC->name, REC->ifindex, __le16_to_cpup((__le16 *)__get_dynamic_array(frame))", 
        "\"netdev:%s(%d), ftype:0x%.2x\", REC->name, REC->ifindex, __le16_to_cpup((__le16 *)__get_dynamic_array(frame))", 
        "\"netdev:%s(%d), %pM, band: %d, freq: %u\", REC->name, REC->ifindex, (REC->bssid), REC->band, REC->center_freq", 
        "\"netdev:%s(%d)\", REC->name, REC->ifindex", 
        "\"netdev:%s(%d), mac: %pM\", REC->name, REC->ifindex, (REC->macaddr)", 
        "\"returned %s\", (REC->ret) ? \"true\" : \"false\"", 
        "\"%s, netdev:%s(%d), %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->addr)", 
        "\"%s, netdev:%s(%d), %pM oper class %d, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->wiphy_name, REC->name, REC->ifindex, (REC->addr), REC->oper_class, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"%s, netdev:%s(%d), %pM, TSID %d\", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer), REC->tsid", 
        "\"%s, netdev:%s(%d), %pM, TSID %d, UP %d, time %d\", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer), REC->tsid, REC->user_prio, REC->admitted_time", 
        "\"%s, netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"%s, netdev:%s(%d), num_des: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->num_des", 
        "\"%s, netdev:%s(%d), band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, block_tx: %d, count: %u, radar_required: %d\", REC->wiphy_name, REC->name, REC->ifindex, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2, REC->block_tx, REC->count, REC->radar_required", 
        "\"%s, wdev(%u)\", REC->wiphy_name, (REC->id)", 
        "\"%s, wdev(%u), proto=%x, duration=%u\", REC->wiphy_name, (REC->id), REC->proto, REC->duration", 
        "\"%s, netdev:%s(%d), md: 0x%x\", REC->wiphy_name, REC->name, REC->ifindex, REC->md", 
        "\"%s, netdev:%s(%d), acl policy: %d\", REC->wiphy_name, REC->name, REC->ifindex, REC->acl_policy", 
        "\"%s, wdev(%u), cookie=%llu\", REC->wiphy_name, (REC->id), REC->cookie", 
        "\"%s, wdev(%u), type=%u, cookie=%llu\", REC->wiphy_name, (REC->id), REC->func_type, REC->cookie", 
        "\"%s, wdev(%u), master preference: %u, dual: %d, changes: %x\", REC->wiphy_name, (REC->id), REC->master_pref, REC->dual, REC->changes", 
        "\"%s, wdev(%u), master preference: %u, dual: %d\", REC->wiphy_name, (REC->id), REC->master_pref, REC->dual", 
        "\"%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, ret: %d\", REC->wiphy_name, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2, REC->ret", 
        "\"%s, netdev:%s(%d), noack_map: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->noack_map", 
        "\"%s, wdev(%u), band: %d, freq: %u, offchan: %s, wait: %u, no cck: %s, dont wait for ack: %s\", REC->wiphy_name, (REC->id), REC->band, REC->center_freq, (REC->offchan) ? \"true\" : \"false\", REC->wait, (REC->no_cck) ? \"true\" : \"false\", (REC->dont_wait_for_ack) ? \"true\" : \"false\"", 
        "\"%s, wdev(%u), cookie: %llu\", REC->wiphy_name, (REC->id), REC->cookie", 
        "\"%s, returned %d, cookie: %llu\", REC->wiphy_name, REC->ret, REC->cookie", 
        "\"%s, wdev(%u), band: %d, freq: %u, duration: %u\", REC->wiphy_name, (REC->id), REC->band, REC->center_freq, REC->duration", 
        "\"%s, netdev:%s(%d), %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer)", 
        "\"%s, netdev:%s(%d), bssid: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->bssid)", 
        "\"%s, netdev:%s(%d), %pM, oper: %d\", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer), REC->oper", 
        "\"%s, returned: %d, band: %d, freq: %u, channel time: %llu, channel time busy: %llu, channel time extension busy: %llu, channel time rx: %llu, channel time tx: %llu, scan time: %llu, filled: %u, noise: %d\", REC->wiphy_name, REC->ret, REC->band, REC->center_freq, REC->time, REC->time_busy, REC->time_ext_busy, REC->time_rx, REC->time_tx, REC->time_scan, REC->filled, REC->noise", 
        "\"%s, netdev:%s(%d), index: %d\", REC->wiphy_name, REC->name, REC->ifindex, REC->idx", 
        "\"%s, netdev:%s(%d), %pM, action_code: %u, dialog_token: %u, status_code: %u, peer_capability: %u initiator: %s buf: %#.2x \", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer), REC->action_code, REC->dialog_token, REC->status_code, REC->peer_capability, (REC->initiator) ? \"true\" : \"false\", ((u8 *)__get_dynamic_array(buf))[0]", 
        "\"%s, netdev:%s(%d)\", REC->wiphy_name, REC->name, REC->ifindex", 
        "\"%s, tx: %u, rx: %u \", REC->wiphy_name, REC->tx, REC->rx", 
        "\"%s, tx: %u, tx_max: %u, rx: %u, rx_max: %u \", REC->wiphy_name, REC->tx, REC->tx_max, REC->rx, REC->rx_max", 
        "\"%s, returned %d, tx: %u, rx: %u\", REC->wiphy_name, REC->ret, REC->tx, REC->rx", 
        "\"%s, wdev(%u), frame_type: 0x%.2x, reg: %s \", REC->wiphy_name, (REC->id), REC->frame_type, REC->reg ? \"true\" : \"false\"", 
        "\"%s, netdev:%s(%d), peer: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->peer)", 
        "\"%s, function returns: %d, function filled: %d\", REC->wiphy_name, REC->func_ret, REC->func_fill", 
        "\"%s, wdev(%u), type: %u, mbm: %d\", REC->wiphy_name, (REC->id),REC->type, REC->mbm", 
        "\"%s, changed: %u\", REC->wiphy_name, REC->changed", 
        "\"%s, netdev:%s(%d)\", REC->wiphy_name, REC->name, REC->ifindex", 
        "\"%s, netdev:%s(%d), bssid: %pM, ssid: %s\", REC->wiphy_name, REC->name, REC->ifindex, (REC->bssid), REC->ssid", 
        "\"%s, netdev:%s(%d), reason code: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->reason_code", 
        "\"%s, netdev:%s(%d), rate: %u, packets: %u, interval: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->rate, REC->pkts, REC->intvl", 
        "\"%s, netdev:%s(%d), rssi_thold: %d, rssi_hyst: %u \", REC->wiphy_name, REC->name, REC->ifindex, REC->rssi_thold, REC->rssi_hyst", 
        "\"%s, netdev:%s(%d), bssid: %pM, ssid: %s, auth type: %d, privacy: %s, wpa versions: %u, flags: %u, previous bssid: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->bssid), REC->ssid, REC->auth_type, (REC->privacy) ? \"true\" : \"false\", REC->wpa_versions, REC->flags, (REC->prev_bssid)", 
        "\"%s, netdev:%s(%d), %senabled, timeout: %d \", REC->wiphy_name, REC->name, REC->ifindex, REC->enabled ? \"\" : \"not \", REC->timeout", 
        "\"%s, wdev(%u), cookie: %llu \", REC->wiphy_name, (REC->id), REC->cookie", 
        "\"%s, netdev:%s(%d), bssid: %pM, reason: %u, local state change: %s\", REC->wiphy_name, REC->name, REC->ifindex, (REC->bssid), REC->reason_code, (REC->local_state_change) ? \"true\" : \"false\"", 
        "\"%s, netdev:%s(%d), bssid: %pM, reason: %u\", REC->wiphy_name, REC->name, REC->ifindex, (REC->bssid), REC->reason_code", 
        "\"%s, netdev:%s(%d), bssid: %pM, previous bssid: %pM, use mfp: %s, flags: %u\", REC->wiphy_name, REC->name, REC->ifindex, (REC->bssid), (REC->prev_bssid), (REC->use_mfp) ? \"true\" : \"false\", REC->flags", 
        "\"%s, netdev:%s(%d), auth type: %d, bssid: %pM\", REC->wiphy_name, REC->name, REC->ifindex, REC->auth_type, (REC->bssid)", 
        "\"%s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u\", REC->wiphy_name, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2", 
        "\"%s, netdev:%s(%d), band: %d, freq: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->band, REC->center_freq", 
        "\"%s, netdev:%s(%d), ac: %d, txop: %u, cwmin: %u, cwmax: %u, aifs: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->ac, REC->txop, REC->cwmin, REC->cwmax, REC->aifs", 
        "\"%s, netdev:%s(%d), use cts prot: %d, use short preamble: %d, use short slot time: %d, ap isolate: %d, ht opmode: %d\", REC->wiphy_name, REC->name, REC->ifindex, REC->use_cts_prot, REC->use_short_preamble, REC->use_short_slot_time, REC->ap_isolate, REC->ht_opmode", 
        "\"%s, netdev:%s(%d)\", REC->wiphy_name, REC->name, REC->ifindex", 
        "\"%s, netdev:%s(%d), mask: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->mask", 
        "\"%s, returned: %d\", REC->wiphy_name, REC->ret", 
        "\"%s, returned %d. mpath info - generation: %d, filled: %u, frame qlen: %u, sn: %u, metric: %u, exptime: %u, discovery timeout: %u, discovery retries: %u, flags: %u\", REC->wiphy_name, REC->ret, REC->generation, REC->filled, REC->frame_qlen, REC->sn, REC->metric, REC->exptime, REC->discovery_timeout, REC->discovery_retries, REC->flags", 
        "\"%s, netdev:%s(%d), index: %d, destination: %pM, mpp: %pM\", REC->wiphy_name, REC->name, REC->ifindex, REC->idx, (REC->dst), (REC->mpp)", 
        "\"%s, netdev:%s(%d), destination: %pM, mpp: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->dst), (REC->mpp)", 
        "\"%s, netdev:%s(%d), index: %d, destination: %pM, next hop: %pM\", REC->wiphy_name, REC->name, REC->ifindex, REC->idx, (REC->dst), (REC->next_hop)", 
        "\"%s, netdev:%s(%d), destination: %pM, next hop: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->dst), (REC->next_hop)", 
        "\"%s, returned %d\", REC->wiphy_name, REC->ret", 
        "\"%s, netdev:%s(%d), station mac: %pM, idx: %d\", REC->wiphy_name, REC->name, REC->ifindex, (REC->sta_mac), REC->idx", 
        "\"%s, netdev:%s(%d), station mac: %pM, subtype: %u, reason_code: %u\", REC->wiphy_name, REC->name, REC->ifindex, (REC->sta_mac), REC->subtype, REC->reason_code", 
        "\"%s, netdev:%s(%d), mac: %pM\", REC->wiphy_name, REC->name, REC->ifindex, (REC->sta_mac)", 
        "\"%s, netdev:%s(%d), station mac: %pM, station flags mask: %u, station flags set: %u, station modify mask: %u, listen interval: %d, aid: %u, plink action: %u, plink state: %u, uapsd queues: %u, vlan:%s\", REC->wiphy_name, REC->name, REC->ifindex, (REC->sta_mac), REC->sta_flags_mask, REC->sta_flags_set, REC->sta_modify_mask, REC->listen_interval, REC->aid, REC->plink_action, REC->plink_state, REC->uapsd_queues, REC->vlan", 
        "\"%s, netdev:%s(%d)\", REC->wiphy_name, REC->name, REC->ifindex", 
        "\"%s, netdev:%s(%d)\", REC->wiphy_name, REC->name, REC->ifindex", 
        "\"%s, netdev:%s(%d), AP settings - ssid: %s, band: %d, control freq: %u, width: %d, cf1: %u, cf2: %u, beacon interval: %d, dtim period: %d, hidden ssid: %d, wpa versions: %u, privacy: %s, auth type: %d, inactivity timeout: %d\", REC->wiphy_name, REC->name, REC->ifindex, REC->ssid, REC->band, REC->control_freq, REC->width, REC->center_freq1, REC->center_freq2, REC->beacon_interval, REC->dtim_period, REC->hidden_ssid, REC->wpa_ver, (REC->privacy) ? \"true\" : \"false\", REC->auth_type, REC->inactivity_timeout", 
        "\"%s, netdev:%s(%d), key index: %u\", REC->wiphy_name, REC->name, REC->ifindex, REC->key_index", 
        "\"%s, netdev:%s(%d), key index: %u, unicast: %s, multicast: %s\", REC->wiphy_name, REC->name, REC->ifindex, REC->key_index, (REC->unicast) ? \"true\" : \"false\", (REC->multicast) ? \"true\" : \"false\"", 
        "\"%s, netdev:%s(%d), key_index: %u, pairwise: %s, mac addr: %pM\", REC->wiphy_name, REC->name, REC->ifindex, REC->key_index, (REC->pairwise) ? \"true\" : \"false\", (REC->mac_addr)", 
        "\"%s, netdev:%s(%d), type: %d\", REC->wiphy_name, REC->name, REC->ifindex, REC->type", 
        "\"%s, wdev(%u)\", REC->wiphy_name, (REC->id)", 
        "\"%s, virtual intf name: %s, type: %d\", REC->wiphy_name, __get_str(vir_intf_name), REC->type", 
        "\"%s, %senabled \", REC->wiphy_name, REC->enabled ? \"\" : \"not \"", 
        "\"%s\", REC->wiphy_name", 
        "\"%s\", REC->wiphy_name", 
        "\"%s, returned: %d\", REC->wiphy_name, REC->ret", 
        "\"%s, wow%s - any: %d, disconnect: %d, magic pkt: %d, gtk rekey failure: %d, eap identify req: %d, four way handshake: %d, rfkill release: %d.\", REC->wiphy_name, REC->valid_wow ? \"\" : \"(Not configured!)\", REC->any, REC->disconnect, REC->magic_pkt, REC->gtk_rekey_failure, REC->eap_identity_req, REC->four_way_handshake, REC->rfkill_release", 
        "cfg80211", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "GCC: (Debian 6.3.0-18+deb9u1) 6.3.0 20170516", 
        "cfg80211.ko", 
        "cfg80211_rfkill_poll", 
        "cfg80211_event_work", 
        "cfg80211_sched_scan_stop_wk", 
        "ieee80211_debugfs_dir", 
        "cfg80211_dev_check_name.isra.0", 
        "wiphy_counter.62955", 
        "cfg80211_destroy_iface_wk", 
        "cfg80211_rfkill_set_block", 
        "cfg80211_rfkill_sync_work", 
        "__key.63008", 
        "cfg80211_pernet_exit", 
        "__warned.63227", 
        "cfg80211_netdev_notifier_call", 
        "wiphy_type", 
        "__key.63306", 
        "cfg80211_init", 
        "cfg80211_pernet_ops", 
        "cfg80211_netdev_notifier", 
        "cfg80211_exit", 
        "__ksymtab_cfg80211_stop_iface", 
        "__kstrtab_cfg80211_stop_iface", 
        "__kcrctab_cfg80211_stop_iface", 
        "__ksymtab_cfg80211_unregister_wdev", 
        "__kstrtab_cfg80211_unregister_wdev", 
        "__kcrctab_cfg80211_unregister_wdev", 
        "__ksymtab_wiphy_rfkill_set_hw_state", 
        "__kstrtab_wiphy_rfkill_set_hw_state", 
        "__kcrctab_wiphy_rfkill_set_hw_state", 
        "__ksymtab_wiphy_free", 
        "__kstrtab_wiphy_free", 
        "__kcrctab_wiphy_free", 
        "__ksymtab_wiphy_unregister", 
        "__kstrtab_wiphy_unregister", 
        "__kcrctab_wiphy_unregister", 
        "__ksymtab_wiphy_rfkill_stop_polling", 
        "__kstrtab_wiphy_rfkill_stop_polling", 
        "__kcrctab_wiphy_rfkill_stop_polling", 
        "__ksymtab_wiphy_rfkill_start_polling", 
        "__kstrtab_wiphy_rfkill_start_polling", 
        "__kcrctab_wiphy_rfkill_start_polling", 
        "__ksymtab_wiphy_register", 
        "__kstrtab_wiphy_register", 
        "__kcrctab_wiphy_register", 
        "__ksymtab_wiphy_new_nm", 
        "__kstrtab_wiphy_new_nm", 
        "__kcrctab_wiphy_new_nm", 
        "__ksymtab_cfg80211_shutdown_all_interfaces", 
        "__kstrtab_cfg80211_shutdown_all_interfaces", 
        "__kcrctab_cfg80211_shutdown_all_interfaces", 
        "__UNIQUE_ID_cfg80211_disable_40mhz_24ghz110", 
        "__UNIQUE_ID_cfg80211_disable_40mhz_24ghztype109", 
        "__param_cfg80211_disable_40mhz_24ghz", 
        "__param_str_cfg80211_disable_40mhz_24ghz", 
        "__UNIQUE_ID_alias108", 
        "__UNIQUE_ID_description107", 
        "__UNIQUE_ID_license106", 
        "__UNIQUE_ID_author105", 
        "wiphy_uevent", 
        "wiphy_namespace", 
        "wiphy_resume", 
        "wiphy_suspend", 
        "wiphy_dev_release", 
        "name_show", 
        "address_mask_show", 
        "macaddress_show", 
        "index_show", 
        "addresses_show", 
        "__key.62351", 
        "ieee80211_groups", 
        "wiphy_pm_ops", 
        "ieee80211_group", 
        "ieee80211_attrs", 
        "dev_attr_index", 
        "dev_attr_macaddress", 
        "dev_attr_address_mask", 
        "dev_attr_addresses", 
        "dev_attr_name", 
        "radiotap_ns", 
        "__ksymtab_ieee80211_radiotap_iterator_next", 
        "__kstrtab_ieee80211_radiotap_iterator_next", 
        "__kcrctab_ieee80211_radiotap_iterator_next", 
        "__ksymtab_ieee80211_radiotap_iterator_init", 
        "__kstrtab_ieee80211_radiotap_iterator_init", 
        "__kcrctab_ieee80211_radiotap_iterator_init", 
        "rtap_namespace_sizes", 
        "cfg80211_iter_sum_ifcombs", 
        "__frame_add_frag", 
        "__mcs2bitrate.72414", 
        "base.72426", 
        "__warned.72450", 
        "__warned.72415", 
        "__warned.72429", 
        "__ksymtab_cfg80211_send_layer2_update", 
        "__kstrtab_cfg80211_send_layer2_update", 
        "__kcrctab_cfg80211_send_layer2_update", 
        "__ksymtab_bridge_tunnel_header", 
        "__kstrtab_bridge_tunnel_header", 
        "__kcrctab_bridge_tunnel_header", 
        "__ksymtab_rfc1042_header", 
        "__kstrtab_rfc1042_header", 
        "__kcrctab_rfc1042_header", 
        "__ksymtab_cfg80211_free_nan_func", 
        "__kstrtab_cfg80211_free_nan_func", 
        "__kcrctab_cfg80211_free_nan_func", 
        "__ksymtab_cfg80211_get_station", 
        "__kstrtab_cfg80211_get_station", 
        "__kcrctab_cfg80211_get_station", 
        "__ksymtab_ieee80211_get_num_supported_channels", 
        "__kstrtab_ieee80211_get_num_supported_channels", 
        "__kcrctab_ieee80211_get_num_supported_channels", 
        "__ksymtab_cfg80211_check_combinations", 
        "__kstrtab_cfg80211_check_combinations", 
        "__kcrctab_cfg80211_check_combinations", 
        "__ksymtab_cfg80211_iter_combinations", 
        "__kstrtab_cfg80211_iter_combinations", 
        "__kcrctab_cfg80211_iter_combinations", 
        "__ksymtab_ieee80211_chandef_to_operating_class", 
        "__kstrtab_ieee80211_chandef_to_operating_class", 
        "__kcrctab_ieee80211_chandef_to_operating_class", 
        "__ksymtab_ieee80211_operating_class_to_band", 
        "__kstrtab_ieee80211_operating_class_to_band", 
        "__kcrctab_ieee80211_operating_class_to_band", 
        "__ksymtab_ieee80211_ie_split_ric", 
        "__kstrtab_ieee80211_ie_split_ric", 
        "__kcrctab_ieee80211_ie_split_ric", 
        "__ksymtab_cfg80211_get_p2p_attr", 
        "__kstrtab_cfg80211_get_p2p_attr", 
        "__kcrctab_cfg80211_get_p2p_attr", 
        "__ksymtab_cfg80211_calculate_bitrate", 
        "__kstrtab_cfg80211_calculate_bitrate", 
        "__kcrctab_cfg80211_calculate_bitrate", 
        "__ksymtab_ieee80211_bss_get_ie", 
        "__kstrtab_ieee80211_bss_get_ie", 
        "__kcrctab_ieee80211_bss_get_ie", 
        "__ksymtab_cfg80211_classify8021d", 
        "__kstrtab_cfg80211_classify8021d", 
        "__kcrctab_cfg80211_classify8021d", 
        "__ksymtab_ieee80211_amsdu_to_8023s", 
        "__kstrtab_ieee80211_amsdu_to_8023s", 
        "__kcrctab_ieee80211_amsdu_to_8023s", 
        "__ksymtab_ieee80211_data_from_8023", 
        "__kstrtab_ieee80211_data_from_8023", 
        "__kcrctab_ieee80211_data_from_8023", 
        "__ksymtab_ieee80211_data_to_8023_exthdr", 
        "__kstrtab_ieee80211_data_to_8023_exthdr", 
        "__kcrctab_ieee80211_data_to_8023_exthdr", 
        "__ksymtab_ieee80211_get_mesh_hdrlen", 
        "__kstrtab_ieee80211_get_mesh_hdrlen", 
        "__kcrctab_ieee80211_get_mesh_hdrlen", 
        "__ksymtab_ieee80211_get_hdrlen_from_skb", 
        "__kstrtab_ieee80211_get_hdrlen_from_skb", 
        "__kcrctab_ieee80211_get_hdrlen_from_skb", 
        "__ksymtab_ieee80211_hdrlen", 
        "__kstrtab_ieee80211_hdrlen", 
        "__kcrctab_ieee80211_hdrlen", 
        "__ksymtab___ieee80211_get_channel", 
        "__kstrtab___ieee80211_get_channel", 
        "__kcrctab___ieee80211_get_channel", 
        "__ksymtab_ieee80211_frequency_to_channel", 
        "__kstrtab_ieee80211_frequency_to_channel", 
        "__kcrctab_ieee80211_frequency_to_channel", 
        "__ksymtab_ieee80211_channel_to_frequency", 
        "__kstrtab_ieee80211_channel_to_frequency", 
        "__kcrctab_ieee80211_channel_to_frequency", 
        "__ksymtab_ieee80211_mandatory_rates", 
        "__kstrtab_ieee80211_mandatory_rates", 
        "__kcrctab_ieee80211_mandatory_rates", 
        "__ksymtab_ieee80211_get_response_rate", 
        "__kstrtab_ieee80211_get_response_rate", 
        "__kcrctab_ieee80211_get_response_rate", 
        "map_regdom_flags", 
        "freq_reg_info_regd", 
        "reg_process_ht_flags_band", 
        "reg_update_last_request", 
        "core_request_world", 
        "reset_regdomains", 
        "cfg80211_world_regdom", 
        "call_crda", 
        "reg_crda_timeouts", 
        "descriptor.62824", 
        "descriptor.62829", 
        "reg_pdev", 
        "crda_timeout", 
        "descriptor.62833", 
        "reg_copy_regd", 
        "is_wiphy_all_set_reg_flag", 
        "reg_check_chans_work", 
        "descriptor.63264", 
        "queue_regulatory_request", 
        "reg_requests_list", 
        "reg_work", 
        "regulatory_hint_core", 
        "rule_contains", 
        "reg_set_request_processed", 
        "is_valid_rd", 
        "handle_reg_beacon.isra.13", 
        "__freq_reg_info.constprop.22", 
        "descriptor.62628", 
        "CSWTCH.291", 
        "reg_rule_to_chan_bw_flags.isra.14", 
        "wiphy_update_regulatory", 
        "reg_beacon_list", 
        "descriptor.63135", 
        "descriptor.63091", 
        "descriptor.63086", 
        "descriptor.63139", 
        "descriptor.63130", 
        "handle_band_custom", 
        "descriptor.63313", 
        "reg_process_self_managed_hints", 
        "reg_check_chans", 
        "reg_todo", 
        "descriptor.63451", 
        "reg_pending_beacons", 
        "user_alpha2", 
        "print_rd_rules", 
        "descriptor.63726", 
        "descriptor.63731", 
        "descriptor.63735", 
        "print_regdomain_info", 
        "descriptor.63796", 
        "__regulatory_set_wiphy_regd", 
        "reg_rules_intersect", 
        "regdom_intersect", 
        "restore_regulatory_settings", 
        "reg_is_indoor", 
        "reg_is_indoor_portid", 
        "descriptor.63569", 
        "descriptor.63574", 
        "descriptor.63639", 
        "descriptor.63578", 
        "descriptor.63582", 
        "descriptor.63586", 
        "crda_timeout_work", 
        "descriptor.62804", 
        "descriptor.63686", 
        "descriptor.63712", 
        "descriptor.63750", 
        "descriptor.63785", 
        "descriptor.63789", 
        "descriptor.63773", 
        "descriptor.63777", 
        "descriptor.63769", 
        "descriptor.63781", 
        "descriptor.63760", 
        "descriptor.63765", 
        "__func__.63761", 
        "__func__.63727", 
        "__func__.63797", 
        "__func__.63751", 
        "__func__.63713", 
        "__func__.63687", 
        "__func__.62629", 
        "__func__.63314", 
        "__func__.63265", 
        "__func__.63087", 
        "__func__.63131", 
        "__func__.63570", 
        "__func__.63640", 
        "__func__.62805", 
        "__func__.62825", 
        "__func__.63452", 
        "__ksymtab_regulatory_set_wiphy_regd_sync_rtnl", 
        "__kstrtab_regulatory_set_wiphy_regd_sync_rtnl", 
        "__kcrctab_regulatory_set_wiphy_regd_sync_rtnl", 
        "__ksymtab_regulatory_set_wiphy_regd", 
        "__kstrtab_regulatory_set_wiphy_regd", 
        "__kcrctab_regulatory_set_wiphy_regd", 
        "__ksymtab_regulatory_hint", 
        "__kstrtab_regulatory_hint", 
        "__kcrctab_regulatory_hint", 
        "__ksymtab_wiphy_apply_custom_regulatory", 
        "__kstrtab_wiphy_apply_custom_regulatory", 
        "__kcrctab_wiphy_apply_custom_regulatory", 
        "__ksymtab_reg_initiator_name", 
        "__kstrtab_reg_initiator_name", 
        "__kcrctab_reg_initiator_name", 
        "__ksymtab_freq_reg_info", 
        "__kstrtab_freq_reg_info", 
        "__kcrctab_freq_reg_info", 
        "__UNIQUE_ID_ieee80211_regdom107", 
        "__UNIQUE_ID_ieee80211_regdomtype106", 
        "__param_ieee80211_regdom", 
        "__param_str_ieee80211_regdom", 
        "bss_free", 
        "__cfg80211_unlink_bss", 
        "__warned.63550", 
        "__cfg80211_bss_expire", 
        "cfg80211_get_bss_channel", 
        "cfg80211_get_dev_from_ifindex", 
        "cmp_bss.part.1", 
        "rb_find_bss.isra.2", 
        "cfg80211_bss_update", 
        "__warned.63950", 
        "__warned.63974", 
        "__warned.63945", 
        "__ksymtab_cfg80211_wext_giwscan", 
        "__kstrtab_cfg80211_wext_giwscan", 
        "__kcrctab_cfg80211_wext_giwscan", 
        "__ksymtab_cfg80211_wext_siwscan", 
        "__kstrtab_cfg80211_wext_siwscan", 
        "__kcrctab_cfg80211_wext_siwscan", 
        "__ksymtab_cfg80211_unlink_bss", 
        "__kstrtab_cfg80211_unlink_bss", 
        "__kcrctab_cfg80211_unlink_bss", 
        "__ksymtab_cfg80211_put_bss", 
        "__kstrtab_cfg80211_put_bss", 
        "__kcrctab_cfg80211_put_bss", 
        "__ksymtab_cfg80211_ref_bss", 
        "__kstrtab_cfg80211_ref_bss", 
        "__kcrctab_cfg80211_ref_bss", 
        "__ksymtab_cfg80211_inform_bss_frame_data", 
        "__kstrtab_cfg80211_inform_bss_frame_data", 
        "__kcrctab_cfg80211_inform_bss_frame_data", 
        "__ksymtab_cfg80211_inform_bss_data", 
        "__kstrtab_cfg80211_inform_bss_data", 
        "__kcrctab_cfg80211_inform_bss_data", 
        "__ksymtab_cfg80211_get_bss", 
        "__kstrtab_cfg80211_get_bss", 
        "__kcrctab_cfg80211_get_bss", 
        "__ksymtab_cfg80211_find_vendor_ie", 
        "__kstrtab_cfg80211_find_vendor_ie", 
        "__kcrctab_cfg80211_find_vendor_ie", 
        "__ksymtab_cfg80211_find_ie_match", 
        "__kstrtab_cfg80211_find_ie_match", 
        "__kcrctab_cfg80211_find_ie_match", 
        "__ksymtab_cfg80211_sched_scan_stopped", 
        "__kstrtab_cfg80211_sched_scan_stopped", 
        "__kcrctab_cfg80211_sched_scan_stopped", 
        "__ksymtab_cfg80211_sched_scan_stopped_rtnl", 
        "__kstrtab_cfg80211_sched_scan_stopped_rtnl", 
        "__kcrctab_cfg80211_sched_scan_stopped_rtnl", 
        "__ksymtab_cfg80211_sched_scan_results", 
        "__kstrtab_cfg80211_sched_scan_results", 
        "__kcrctab_cfg80211_sched_scan_results", 
        "__ksymtab_cfg80211_scan_done", 
        "__kstrtab_cfg80211_scan_done", 
        "__kcrctab_cfg80211_scan_done", 
        "__UNIQUE_ID_bss_entries_limit106", 
        "__UNIQUE_ID_bss_entries_limittype105", 
        "__param_bss_entries_limit", 
        "__param_str_bss_entries_limit", 
        "nl80211_set_wds_peer", 
        "nl80211_del_interface", 
        "nl80211_set_noack_map", 
        "validate_acl_mac_addrs", 
        "nl80211_set_mpath", 
        "nl80211_new_mpath", 
        "nl80211_del_mpath", 
        "validate_scan_freqs", 
        "nl80211_abort_scan", 
        "nl80211_parse_mcast_rate", 
        "nl80211_flush_pmksa", 
        "nl80211_tdls_mgmt", 
        "nl80211_tdls_oper", 
        "nl80211_set_power_save", 
        "nl80211_register_unexpected_frame", 
        "nl80211_nan_change_config", 
        "nl80211_crit_protocol_stop", 
        "nl80211_crit_protocol_start", 
        "nl80211_post_doit", 
        "nl80211_update_ft_ies", 
        "nl80211_set_mcast_rate", 
        "nl80211_setdel_pmksa", 
        "nl80211_del_station", 
        "nl80211_cancel_remain_on_channel", 
        "nl80211_tx_mgmt_cancel_wait", 
        "nl80211_nan_del_func", 
        "__cfg80211_wdev_from_attrs", 
        "nl80211_vendor_cmd", 
        "__cfg80211_rdev_from_attrs", 
        "nl80211_pre_doit", 
        "nl80211_put_iftypes", 
        "__cfg80211_alloc_vendor_skb", 
        "nl80211_fam", 
        "get_key_callback", 
        "__warned.48064", 
        "cfg80211_send_cqm", 
        "nl80211_dump_wiphy_done", 
        "nl80211_get_power_save", 
        "nl80211_probe_client", 
        "nl80211_get_protocol_features", 
        "nl80211_get_key", 
        "nl80211_send_chandef", 
        "nl80211_send_iface", 
        "nl80211_get_interface", 
        "nl80211_put_sta_rate", 
        "nl80211_register_beacons", 
        "nl80211_add_tx_ts", 
        "nl80211_del_tx_ts", 
        "nl80211_tdls_cancel_channel_switch", 
        "nl80211_set_bss", 
        "nl80211_get_valid_chan", 
        "nl80211_set_qos_map", 
        "nl80211_parse_random_mac", 
        "nl80211_get_mesh_config", 
        "nl80211_parse_key_new", 
        "nl80211_key_policy", 
        "nl80211_key_default_policy", 
        "parse_monitor_flags", 
        "mntr_flags_policy", 
        "nl80211_set_rekey_data", 
        "nl80211_rekey_policy", 
        "nl80211_parse_beacon", 
        "nl80211_set_beacon", 
        "handle_nan_filter", 
        "nl80211_nan_add_func", 
        "nl80211_nan_func_policy", 
        "nl80211_stop_nan", 
        "nl80211_start_nan", 
        "nl80211_start_p2p_device", 
        "nl80211_stop_p2p_device", 
        "nl80211_leave_ocb", 
        "nl80211_leave_mesh", 
        "validate_beacon_tx_rate", 
        "nl80211_register_mgmt", 
        "nl80211_wiphy_netns", 
        "nl80211_disconnect", 
        "nl80211_parse_connkeys", 
        "nl80211_leave_ibss", 
        "nl80211_disassociate", 
        "nl80211_deauthenticate", 
        "nl80211_stop_sched_scan", 
        "nl80211_req_set_reg", 
        "nl80211_set_reg", 
        "reg_rule_policy", 
        "nl80211_put_regdom", 
        "nl80211_get_reg_do", 
        "get_vlan", 
        "nl80211_stop_ap", 
        "nl80211_msg_put_channel", 
        "nl80211_valid_4addr.isra.4.part.5", 
        "nl80211_set_interface", 
        "parse_station_flags.isra.9", 
        "sta_flags_policy", 
        "nl80211_put_signal.part.10", 
        "nl80211_parse_sta_wme.isra.11", 
        "nl80211_sta_wme_policy", 
        "nl80211_parse_sta_channel_info.isra.13", 
        "nl80211_set_station", 
        "nl80211_new_station", 
        "nl80211_set_cqm", 
        "nl80211_attr_cqm_policy", 
        "nl80211_send_remain_on_chan_event.isra.19", 
        "nl80211_parse_key", 
        "nl80211_del_key", 
        "nl80211_set_key", 
        "nl80211_new_key", 
        "nl80211_authenticate", 
        "nl80211_send_wiphy", 
        "nl80211_get_wiphy", 
        "nl80211_send_mlme_event.isra.27", 
        "nl80211_send_mlme_timeout.isra.28", 
        "__nl80211_unexpected_frame.isra.29", 
        "cfg80211_prepare_cqm.isra.30", 
        "nl80211_get_coalesce", 
        "nl80211_get_wowlan", 
        "nl80211_send_mpath.isra.36", 
        "nl80211_get_mpp", 
        "nl80211_get_mpath", 
        "nl80211_vendor_cmd_dump", 
        "nl80211_policy", 
        "nl80211_prepare_wdev_dump.isra.40", 
        "nl80211_dump_mpp", 
        "nl80211_dump_mpath", 
        "nl80211_send_station.isra.41", 
        "nl80211_dump_station", 
        "nl80211_get_station", 
        "nl80211_netlink_notify", 
        "nl80211_parse_chandef.isra.43", 
        "nl80211_tdls_channel_switch", 
        "nl80211_remain_on_channel", 
        "nl80211_channel_switch", 
        "csa_attrs.70514", 
        "nl80211_start_radar_detection", 
        "nl80211_join_ocb", 
        "__nl80211_set_channel", 
        "nl80211_set_wiphy", 
        "txq_params_policy", 
        "nl80211_tx_mgmt", 
        "nl80211_join_ibss", 
        "parse_acl_data.isra.44", 
        "nl80211_set_mac_acl", 
        "nl80211_parse_sched_scan", 
        "nl80211_match_policy", 
        "nl80211_plan_policy", 
        "nl80211_set_wowlan", 
        "nl80211_wowlan_policy", 
        "nl80211_packet_pattern_policy", 
        "nl80211_wowlan_tcp_policy", 
        "nl80211_parse_mesh_config.isra.50", 
        "nl80211_meshconf_params_policy", 
        "nl80211_update_mesh_config", 
        "nl80211_parse_tx_bitrate_mask.isra.51", 
        "CSWTCH.1385", 
        "nl80211_txattr_policy", 
        "nl80211_join_mesh", 
        "nl80211_mesh_setup_params_policy", 
        "nl80211_set_tx_bitrate_mask", 
        "nl80211_crypto_settings.isra.52", 
        "nl80211_start_ap", 
        "nl80211_connect", 
        "nl80211_bss_select_policy", 
        "nl80211_associate", 
        "nl80211_send_scan_msg.constprop.53", 
        "nl80211_send_regdom.constprop.54", 
        "nl80211_get_reg_dump", 
        "nl80211_send_sched_scan_msg.isra.18.constprop.55", 
        "nl80211_send_survey.isra.15.constprop.56", 
        "nl80211_dump_survey", 
        "nl80211_dump_wiphy_parse.isra.23.constprop.57", 
        "nl80211_dump_interface", 
        "nl80211_dump_wiphy", 
        "nl80211_dump_scan", 
        "nl80211_ch_switch_notify.isra.38.constprop.59", 
        "nl80211_set_coalesce", 
        "nl80211_coalesce_policy", 
        "nl80211_new_interface", 
        "__key.69429", 
        "nl80211_trigger_scan", 
        "nl80211_start_sched_scan", 
        "nl80211_ops", 
        "nl80211_mcgrps", 
        "nl80211_netlink_notifier", 
        "__ksymtab_cfg80211_crit_proto_stopped", 
        "__kstrtab_cfg80211_crit_proto_stopped", 
        "__kcrctab_cfg80211_crit_proto_stopped", 
        "__ksymtab_cfg80211_ft_event", 
        "__kstrtab_cfg80211_ft_event", 
        "__kcrctab_cfg80211_ft_event", 
        "__ksymtab_cfg80211_tdls_oper_request", 
        "__kstrtab_cfg80211_tdls_oper_request", 
        "__kcrctab_cfg80211_tdls_oper_request", 
        "__ksymtab_cfg80211_report_wowlan_wakeup", 
        "__kstrtab_cfg80211_report_wowlan_wakeup", 
        "__kcrctab_cfg80211_report_wowlan_wakeup", 
        "__ksymtab_cfg80211_report_obss_beacon", 
        "__kstrtab_cfg80211_report_obss_beacon", 
        "__kcrctab_cfg80211_report_obss_beacon", 
        "__ksymtab_cfg80211_probe_status", 
        "__kstrtab_cfg80211_probe_status", 
        "__kcrctab_cfg80211_probe_status", 
        "__ksymtab_cfg80211_ch_switch_started_notify", 
        "__kstrtab_cfg80211_ch_switch_started_notify", 
        "__kcrctab_cfg80211_ch_switch_started_notify", 
        "__ksymtab_cfg80211_ch_switch_notify", 
        "__kstrtab_cfg80211_ch_switch_notify", 
        "__kcrctab_cfg80211_ch_switch_notify", 
        "__ksymtab_cfg80211_pmksa_candidate_notify", 
        "__kstrtab_cfg80211_pmksa_candidate_notify", 
        "__kcrctab_cfg80211_pmksa_candidate_notify", 
        "__ksymtab_cfg80211_gtk_rekey_notify", 
        "__kstrtab_cfg80211_gtk_rekey_notify", 
        "__kcrctab_cfg80211_gtk_rekey_notify", 
        "__ksymtab_cfg80211_cqm_beacon_loss_notify", 
        "__kstrtab_cfg80211_cqm_beacon_loss_notify", 
        "__kcrctab_cfg80211_cqm_beacon_loss_notify", 
        "__ksymtab_cfg80211_cqm_pktloss_notify", 
        "__kstrtab_cfg80211_cqm_pktloss_notify", 
        "__kcrctab_cfg80211_cqm_pktloss_notify", 
        "__ksymtab_cfg80211_cqm_txe_notify", 
        "__kstrtab_cfg80211_cqm_txe_notify", 
        "__kcrctab_cfg80211_cqm_txe_notify", 
        "__ksymtab_cfg80211_cqm_rssi_notify", 
        "__kstrtab_cfg80211_cqm_rssi_notify", 
        "__kcrctab_cfg80211_cqm_rssi_notify", 
        "__ksymtab_cfg80211_mgmt_tx_status", 
        "__kstrtab_cfg80211_mgmt_tx_status", 
        "__kcrctab_cfg80211_mgmt_tx_status", 
        "__ksymtab_cfg80211_rx_unexpected_4addr_frame", 
        "__kstrtab_cfg80211_rx_unexpected_4addr_frame", 
        "__kcrctab_cfg80211_rx_unexpected_4addr_frame", 
        "__ksymtab_cfg80211_rx_spurious_frame", 
        "__kstrtab_cfg80211_rx_spurious_frame", 
        "__kcrctab_cfg80211_rx_spurious_frame", 
        "__ksymtab_cfg80211_conn_failed", 
        "__kstrtab_cfg80211_conn_failed", 
        "__kcrctab_cfg80211_conn_failed", 
        "__ksymtab_cfg80211_del_sta_sinfo", 
        "__kstrtab_cfg80211_del_sta_sinfo", 
        "__kcrctab_cfg80211_del_sta_sinfo", 
        "__ksymtab_cfg80211_new_sta", 
        "__kstrtab_cfg80211_new_sta", 
        "__kcrctab_cfg80211_new_sta", 
        "__ksymtab_cfg80211_remain_on_channel_expired", 
        "__kstrtab_cfg80211_remain_on_channel_expired", 
        "__kcrctab_cfg80211_remain_on_channel_expired", 
        "__ksymtab_cfg80211_ready_on_channel", 
        "__kstrtab_cfg80211_ready_on_channel", 
        "__kcrctab_cfg80211_ready_on_channel", 
        "__ksymtab_cfg80211_notify_new_peer_candidate", 
        "__kstrtab_cfg80211_notify_new_peer_candidate", 
        "__kcrctab_cfg80211_notify_new_peer_candidate", 
        "__ksymtab_cfg80211_rx_unprot_mlme_mgmt", 
        "__kstrtab_cfg80211_rx_unprot_mlme_mgmt", 
        "__kcrctab_cfg80211_rx_unprot_mlme_mgmt", 
        "__ksymtab_cfg80211_vendor_cmd_reply", 
        "__kstrtab_cfg80211_vendor_cmd_reply", 
        "__kcrctab_cfg80211_vendor_cmd_reply", 
        "__ksymtab___cfg80211_alloc_reply_skb", 
        "__kstrtab___cfg80211_alloc_reply_skb", 
        "__kcrctab___cfg80211_alloc_reply_skb", 
        "__ksymtab_cfg80211_nan_func_terminated", 
        "__kstrtab_cfg80211_nan_func_terminated", 
        "__kcrctab_cfg80211_nan_func_terminated", 
        "__ksymtab_cfg80211_nan_match", 
        "__kstrtab_cfg80211_nan_match", 
        "__kcrctab_cfg80211_nan_match", 
        "__ksymtab___cfg80211_send_event_skb", 
        "__kstrtab___cfg80211_send_event_skb", 
        "__kcrctab___cfg80211_send_event_skb", 
        "__ksymtab___cfg80211_alloc_event_skb", 
        "__kstrtab___cfg80211_alloc_event_skb", 
        "__kcrctab___cfg80211_alloc_event_skb", 
        "__ksymtab_cfg80211_check_station_change", 
        "__kstrtab_cfg80211_check_station_change", 
        "__kcrctab_cfg80211_check_station_change", 
        "cfg80211_process_deauth", 
        "cfg80211_process_disassoc", 
        "cfg80211_process_mlme_unregistrations", 
        "__ksymtab_cfg80211_cac_event", 
        "__kstrtab_cfg80211_cac_event", 
        "__kcrctab_cfg80211_cac_event", 
        "__ksymtab_cfg80211_radar_event", 
        "__kstrtab_cfg80211_radar_event", 
        "__kcrctab_cfg80211_radar_event", 
        "__ksymtab_cfg80211_rx_mgmt", 
        "__kstrtab_cfg80211_rx_mgmt", 
        "__kcrctab_cfg80211_rx_mgmt", 
        "__ksymtab_cfg80211_michael_mic_failure", 
        "__kstrtab_cfg80211_michael_mic_failure", 
        "__kcrctab_cfg80211_michael_mic_failure", 
        "__ksymtab_cfg80211_tx_mlme_mgmt", 
        "__kstrtab_cfg80211_tx_mlme_mgmt", 
        "__kcrctab_cfg80211_tx_mlme_mgmt", 
        "__ksymtab_cfg80211_abandon_assoc", 
        "__kstrtab_cfg80211_abandon_assoc", 
        "__kcrctab_cfg80211_abandon_assoc", 
        "__ksymtab_cfg80211_assoc_timeout", 
        "__kstrtab_cfg80211_assoc_timeout", 
        "__kcrctab_cfg80211_assoc_timeout", 
        "__ksymtab_cfg80211_auth_timeout", 
        "__kstrtab_cfg80211_auth_timeout", 
        "__kcrctab_cfg80211_auth_timeout", 
        "__ksymtab_cfg80211_rx_mlme_mgmt", 
        "__kstrtab_cfg80211_rx_mlme_mgmt", 
        "__kcrctab_cfg80211_rx_mlme_mgmt", 
        "__ksymtab_cfg80211_rx_assoc_resp", 
        "__kstrtab_cfg80211_rx_assoc_resp", 
        "__kcrctab_cfg80211_rx_assoc_resp", 
        "__cfg80211_join_ibss", 
        "__cfg80211_clear_ibss", 
        "__ksymtab_cfg80211_ibss_joined", 
        "__kstrtab_cfg80211_ibss_joined", 
        "__kcrctab_cfg80211_ibss_joined", 
        "cfg80211_conn_scan", 
        "cfg80211_get_conn_bss", 
        "cfg80211_sme_free.isra.0", 
        "cfg80211_conn_do_work", 
        "__warned.63036", 
        "cfg80211_disconnect_work", 
        "before_extcapa.62975", 
        "__ksymtab_cfg80211_disconnected", 
        "__kstrtab_cfg80211_disconnected", 
        "__kcrctab_cfg80211_disconnected", 
        "__ksymtab_cfg80211_roamed_bss", 
        "__kstrtab_cfg80211_roamed_bss", 
        "__kcrctab_cfg80211_roamed_bss", 
        "__ksymtab_cfg80211_roamed", 
        "__kstrtab_cfg80211_roamed", 
        "__kcrctab_cfg80211_roamed", 
        "__ksymtab_cfg80211_connect_bss", 
        "__kstrtab_cfg80211_connect_bss", 
        "__kcrctab_cfg80211_connect_bss", 
        "cfg80211_set_chans_dfs_state", 
        "cfg80211_get_chans_dfs_required", 
        "cfg80211_get_chans_dfs_usable", 
        "cfg80211_get_chans_dfs_available", 
        "cfg80211_get_chans_dfs_cac_time", 
        "cfg80211_secondary_chans_ok", 
        "__warned.62550", 
        "chandef_primary_freqs", 
        "__warned.62316", 
        "cfg80211_chandef_get_width.isra.3", 
        "__warned.62335", 
        "__ksymtab_cfg80211_reg_can_beacon_relax", 
        "__kstrtab_cfg80211_reg_can_beacon_relax", 
        "__kcrctab_cfg80211_reg_can_beacon_relax", 
        "__ksymtab_cfg80211_reg_can_beacon", 
        "__kstrtab_cfg80211_reg_can_beacon", 
        "__kcrctab_cfg80211_reg_can_beacon", 
        "__ksymtab_cfg80211_chandef_usable", 
        "__kstrtab_cfg80211_chandef_usable", 
        "__kcrctab_cfg80211_chandef_usable", 
        "__ksymtab_cfg80211_chandef_dfs_required", 
        "__kstrtab_cfg80211_chandef_dfs_required", 
        "__kcrctab_cfg80211_chandef_dfs_required", 
        "__ksymtab_cfg80211_chandef_compatible", 
        "__kstrtab_cfg80211_chandef_compatible", 
        "__kcrctab_cfg80211_chandef_compatible", 
        "__ksymtab_cfg80211_chandef_valid", 
        "__kstrtab_cfg80211_chandef_valid", 
        "__kcrctab_cfg80211_chandef_valid", 
        "__ksymtab_cfg80211_chandef_create", 
        "__kstrtab_cfg80211_chandef_create", 
        "__kcrctab_cfg80211_chandef_create", 
        "__ksymtab_cfg80211_get_drvinfo", 
        "__kstrtab_cfg80211_get_drvinfo", 
        "__kcrctab_cfg80211_get_drvinfo", 
        "trace_event_define_fields_cfg80211_return_bool", 
        "trace_event_define_fields_cfg80211_return_uint", 
        "trace_event_define_fields_cfg80211_return_u32", 
        "trace_event_define_fields_wiphy_only_evt", 
        "trace_event_define_fields_rdev_scan", 
        "perf_trace_rdev_suspend", 
        "perf_trace_rdev_return_int", 
        "perf_trace_rdev_scan", 
        "perf_trace_wiphy_only_evt", 
        "perf_trace_wiphy_enabled_evt", 
        "perf_trace_rdev_return_int_station_info", 
        "perf_trace_rdev_return_int_mpath_info", 
        "perf_trace_rdev_return_int_mesh_config", 
        "perf_trace_rdev_set_monitor_channel", 
        "perf_trace_rdev_set_wiphy_params", 
        "perf_trace_rdev_return_int_int", 
        "perf_trace_rdev_return_int_tx_rx", 
        "perf_trace_rdev_return_void_tx_rx", 
        "perf_trace_tx_rx_evt", 
        "perf_trace_rdev_return_int_survey_info", 
        "perf_trace_rdev_return_int_cookie", 
        "perf_trace_rdev_return_chandef", 
        "perf_trace_cfg80211_return_bool", 
        "perf_trace_cfg80211_reg_can_beacon", 
        "perf_trace_cfg80211_chandef_dfs_required", 
        "perf_trace_cfg80211_radar_event", 
        "perf_trace_cfg80211_report_obss_beacon", 
        "perf_trace_cfg80211_return_uint", 
        "perf_trace_cfg80211_return_u32", 
        "perf_trace_rdev_set_coalesce", 
        "trace_event_raw_event_rdev_suspend", 
        "trace_event_raw_event_rdev_return_int", 
        "trace_event_raw_event_rdev_scan", 
        "trace_event_raw_event_wiphy_only_evt", 
        "trace_event_raw_event_wiphy_enabled_evt", 
        "trace_event_raw_event_rdev_return_int_station_info", 
        "trace_event_raw_event_rdev_return_int_mpath_info", 
        "trace_event_raw_event_rdev_return_int_mesh_config", 
        "trace_event_raw_event_rdev_set_monitor_channel", 
        "trace_event_raw_event_rdev_set_wiphy_params", 
        "trace_event_raw_event_rdev_return_int_int", 
        "trace_event_raw_event_rdev_return_int_tx_rx", 
        "trace_event_raw_event_rdev_return_void_tx_rx", 
        "trace_event_raw_event_tx_rx_evt", 
        "trace_event_raw_event_rdev_return_int_survey_info", 
        "trace_event_raw_event_rdev_return_int_cookie", 
        "trace_event_raw_event_rdev_return_chandef", 
        "trace_event_raw_event_cfg80211_return_bool", 
        "trace_event_raw_event_cfg80211_reg_can_beacon", 
        "trace_event_raw_event_cfg80211_chandef_dfs_required", 
        "trace_event_raw_event_cfg80211_radar_event", 
        "trace_event_raw_event_cfg80211_report_obss_beacon", 
        "trace_event_raw_event_cfg80211_return_uint", 
        "trace_event_raw_event_cfg80211_return_u32", 
        "trace_event_raw_event_rdev_set_coalesce", 
        "trace_raw_output_rdev_suspend", 
        "trace_raw_output_rdev_return_int", 
        "trace_raw_output_rdev_scan", 
        "trace_raw_output_wiphy_only_evt", 
        "trace_raw_output_wiphy_enabled_evt", 
        "trace_raw_output_rdev_add_virtual_intf", 
        "trace_raw_output_wiphy_wdev_evt", 
        "trace_raw_output_rdev_change_virtual_intf", 
        "trace_raw_output_key_handle", 
        "trace_raw_output_rdev_set_default_key", 
        "trace_raw_output_rdev_set_default_mgmt_key", 
        "trace_raw_output_rdev_start_ap", 
        "trace_raw_output_rdev_change_beacon", 
        "trace_raw_output_wiphy_netdev_evt", 
        "trace_raw_output_station_add_change", 
        "trace_raw_output_station_del", 
        "trace_raw_output_wiphy_netdev_mac_evt", 
        "trace_raw_output_rdev_dump_station", 
        "trace_raw_output_rdev_return_int_station_info", 
        "trace_raw_output_mpath_evt", 
        "trace_raw_output_rdev_dump_mpath", 
        "trace_raw_output_rdev_get_mpp", 
        "trace_raw_output_rdev_dump_mpp", 
        "trace_raw_output_rdev_return_int_mpath_info", 
        "trace_raw_output_rdev_return_int_mesh_config", 
        "trace_raw_output_rdev_update_mesh_config", 
        "trace_raw_output_rdev_join_mesh", 
        "trace_raw_output_rdev_change_bss", 
        "trace_raw_output_rdev_set_txq_params", 
        "trace_raw_output_rdev_libertas_set_mesh_channel", 
        "trace_raw_output_rdev_set_monitor_channel", 
        "trace_raw_output_rdev_auth", 
        "trace_raw_output_rdev_assoc", 
        "trace_raw_output_rdev_deauth", 
        "trace_raw_output_rdev_disassoc", 
        "trace_raw_output_rdev_mgmt_tx_cancel_wait", 
        "trace_raw_output_rdev_set_power_mgmt", 
        "trace_raw_output_rdev_connect", 
        "trace_raw_output_rdev_set_cqm_rssi_config", 
        "trace_raw_output_rdev_set_cqm_txe_config", 
        "trace_raw_output_rdev_disconnect", 
        "trace_raw_output_rdev_join_ibss", 
        "trace_raw_output_rdev_join_ocb", 
        "trace_raw_output_rdev_set_wiphy_params", 
        "trace_raw_output_rdev_set_tx_power", 
        "trace_raw_output_rdev_return_int_int", 
        "trace_raw_output_rdev_set_bitrate_mask", 
        "trace_raw_output_rdev_mgmt_frame_register", 
        "trace_raw_output_rdev_return_int_tx_rx", 
        "trace_raw_output_rdev_return_void_tx_rx", 
        "trace_raw_output_tx_rx_evt", 
        "trace_raw_output_rdev_sched_scan_start", 
        "trace_raw_output_rdev_tdls_mgmt", 
        "trace_raw_output_rdev_dump_survey", 
        "trace_raw_output_rdev_return_int_survey_info", 
        "trace_raw_output_rdev_tdls_oper", 
        "trace_raw_output_rdev_probe_client", 
        "trace_raw_output_rdev_pmksa", 
        "trace_raw_output_rdev_remain_on_channel", 
        "trace_raw_output_rdev_return_int_cookie", 
        "trace_raw_output_rdev_cancel_remain_on_channel", 
        "trace_raw_output_rdev_mgmt_tx", 
        "trace_raw_output_rdev_set_noack_map", 
        "trace_raw_output_rdev_return_chandef", 
        "trace_raw_output_rdev_start_nan", 
        "trace_raw_output_rdev_nan_change_conf", 
        "trace_raw_output_rdev_add_nan_func", 
        "trace_raw_output_rdev_del_nan_func", 
        "trace_raw_output_rdev_set_mac_acl", 
        "trace_raw_output_rdev_update_ft_ies", 
        "trace_raw_output_rdev_crit_proto_start", 
        "trace_raw_output_rdev_crit_proto_stop", 
        "trace_raw_output_rdev_channel_switch", 
        "trace_raw_output_rdev_set_qos_map", 
        "trace_raw_output_rdev_set_ap_chanwidth", 
        "trace_raw_output_rdev_add_tx_ts", 
        "trace_raw_output_rdev_del_tx_ts", 
        "trace_raw_output_rdev_tdls_channel_switch", 
        "trace_raw_output_rdev_tdls_cancel_channel_switch", 
        "trace_raw_output_cfg80211_return_bool", 
        "trace_raw_output_cfg80211_netdev_mac_evt", 
        "trace_raw_output_netdev_evt_only", 
        "trace_raw_output_cfg80211_send_rx_assoc", 
        "trace_raw_output_netdev_frame_event", 
        "trace_raw_output_cfg80211_tx_mlme_mgmt", 
        "trace_raw_output_netdev_mac_evt", 
        "trace_raw_output_cfg80211_michael_mic_failure", 
        "trace_raw_output_cfg80211_ready_on_channel", 
        "trace_raw_output_cfg80211_ready_on_channel_expired", 
        "trace_raw_output_cfg80211_new_sta", 
        "trace_raw_output_cfg80211_rx_mgmt", 
        "trace_raw_output_cfg80211_mgmt_tx_status", 
        "trace_raw_output_cfg80211_cqm_rssi_notify", 
        "trace_raw_output_cfg80211_reg_can_beacon", 
        "trace_raw_output_cfg80211_chandef_dfs_required", 
        "trace_raw_output_cfg80211_ch_switch_notify", 
        "trace_raw_output_cfg80211_ch_switch_started_notify", 
        "trace_raw_output_cfg80211_radar_event", 
        "trace_raw_output_cfg80211_cac_event", 
        "trace_raw_output_cfg80211_rx_evt", 
        "trace_raw_output_cfg80211_ibss_joined", 
        "trace_raw_output_cfg80211_probe_status", 
        "trace_raw_output_cfg80211_cqm_pktloss_notify", 
        "trace_raw_output_cfg80211_pmksa_candidate_notify", 
        "trace_raw_output_cfg80211_report_obss_beacon", 
        "trace_raw_output_cfg80211_tdls_oper_request", 
        "trace_raw_output_cfg80211_scan_done", 
        "trace_raw_output_cfg80211_get_bss", 
        "trace_raw_output_cfg80211_inform_bss_frame", 
        "trace_raw_output_cfg80211_bss_evt", 
        "trace_raw_output_cfg80211_return_uint", 
        "trace_raw_output_cfg80211_return_u32", 
        "trace_raw_output_cfg80211_report_wowlan_wakeup", 
        "trace_raw_output_cfg80211_ft_event", 
        "trace_raw_output_cfg80211_stop_iface", 
        "trace_raw_output_rdev_start_radar_detection", 
        "trace_raw_output_rdev_set_mcast_rate", 
        "trace_raw_output_rdev_set_coalesce", 
        "perf_trace_rdev_add_virtual_intf", 
        "trace_event_raw_event_rdev_add_virtual_intf", 
        "perf_trace_wiphy_wdev_evt", 
        "perf_trace_rdev_mgmt_tx_cancel_wait", 
        "perf_trace_rdev_set_tx_power", 
        "perf_trace_rdev_mgmt_frame_register", 
        "perf_trace_rdev_remain_on_channel", 
        "perf_trace_rdev_cancel_remain_on_channel", 
        "perf_trace_rdev_mgmt_tx", 
        "perf_trace_rdev_start_nan", 
        "perf_trace_rdev_nan_change_conf", 
        "perf_trace_rdev_add_nan_func", 
        "perf_trace_rdev_del_nan_func", 
        "perf_trace_rdev_crit_proto_start", 
        "perf_trace_rdev_crit_proto_stop", 
        "perf_trace_cfg80211_ready_on_channel", 
        "perf_trace_cfg80211_ready_on_channel_expired", 
        "perf_trace_cfg80211_rx_mgmt", 
        "perf_trace_cfg80211_mgmt_tx_status", 
        "perf_trace_cfg80211_stop_iface", 
        "trace_event_raw_event_wiphy_wdev_evt", 
        "trace_event_raw_event_rdev_mgmt_tx_cancel_wait", 
        "trace_event_raw_event_rdev_set_tx_power", 
        "trace_event_raw_event_rdev_mgmt_frame_register", 
        "trace_event_raw_event_rdev_remain_on_channel", 
        "trace_event_raw_event_rdev_cancel_remain_on_channel", 
        "trace_event_raw_event_rdev_mgmt_tx", 
        "trace_event_raw_event_rdev_start_nan", 
        "trace_event_raw_event_rdev_nan_change_conf", 
        "trace_event_raw_event_rdev_add_nan_func", 
        "trace_event_raw_event_rdev_del_nan_func", 
        "trace_event_raw_event_rdev_crit_proto_start", 
        "trace_event_raw_event_rdev_crit_proto_stop", 
        "trace_event_raw_event_cfg80211_ready_on_channel", 
        "trace_event_raw_event_cfg80211_ready_on_channel_expired", 
        "trace_event_raw_event_cfg80211_rx_mgmt", 
        "trace_event_raw_event_cfg80211_mgmt_tx_status", 
        "trace_event_raw_event_cfg80211_stop_iface", 
        "perf_trace_rdev_change_virtual_intf", 
        "trace_event_raw_event_rdev_change_virtual_intf", 
        "perf_trace_rdev_set_default_key", 
        "trace_event_raw_event_rdev_set_default_key", 
        "perf_trace_rdev_set_default_mgmt_key", 
        "trace_event_raw_event_rdev_set_default_mgmt_key", 
        "perf_trace_rdev_change_beacon", 
        "trace_event_raw_event_rdev_change_beacon", 
        "perf_trace_wiphy_netdev_evt", 
        "trace_event_raw_event_wiphy_netdev_evt", 
        "perf_trace_rdev_update_mesh_config", 
        "trace_event_raw_event_rdev_update_mesh_config", 
        "perf_trace_rdev_join_mesh", 
        "trace_event_raw_event_rdev_join_mesh", 
        "perf_trace_rdev_change_bss", 
        "trace_event_raw_event_rdev_change_bss", 
        "perf_trace_rdev_set_txq_params", 
        "trace_event_raw_event_rdev_set_txq_params", 
        "perf_trace_rdev_libertas_set_mesh_channel", 
        "trace_event_raw_event_rdev_libertas_set_mesh_channel", 
        "perf_trace_rdev_set_power_mgmt", 
        "trace_event_raw_event_rdev_set_power_mgmt", 
        "perf_trace_rdev_set_cqm_rssi_config", 
        "trace_event_raw_event_rdev_set_cqm_rssi_config", 
        "perf_trace_rdev_set_cqm_txe_config", 
        "trace_event_raw_event_rdev_set_cqm_txe_config", 
        "perf_trace_rdev_disconnect", 
        "trace_event_raw_event_rdev_disconnect", 
        "perf_trace_rdev_join_ocb", 
        "trace_event_raw_event_rdev_join_ocb", 
        "perf_trace_rdev_sched_scan_start", 
        "trace_event_raw_event_rdev_sched_scan_start", 
        "perf_trace_rdev_dump_survey", 
        "trace_event_raw_event_rdev_dump_survey", 
        "perf_trace_rdev_set_noack_map", 
        "trace_event_raw_event_rdev_set_noack_map", 
        "perf_trace_rdev_set_mac_acl", 
        "trace_event_raw_event_rdev_set_mac_acl", 
        "perf_trace_rdev_update_ft_ies", 
        "trace_event_raw_event_rdev_update_ft_ies", 
        "perf_trace_rdev_channel_switch", 
        "trace_event_raw_event_rdev_channel_switch", 
        "perf_trace_rdev_set_ap_chanwidth", 
        "trace_event_raw_event_rdev_set_ap_chanwidth", 
        "perf_trace_netdev_evt_only", 
        "trace_event_raw_event_netdev_evt_only", 
        "perf_trace_netdev_frame_event", 
        "trace_event_raw_event_netdev_frame_event", 
        "perf_trace_cfg80211_tx_mlme_mgmt", 
        "trace_event_raw_event_cfg80211_tx_mlme_mgmt", 
        "perf_trace_cfg80211_cqm_rssi_notify", 
        "trace_event_raw_event_cfg80211_cqm_rssi_notify", 
        "perf_trace_cfg80211_ch_switch_notify", 
        "trace_event_raw_event_cfg80211_ch_switch_notify", 
        "perf_trace_cfg80211_ch_switch_started_notify", 
        "trace_event_raw_event_cfg80211_ch_switch_started_notify", 
        "perf_trace_cfg80211_cac_event", 
        "trace_event_raw_event_cfg80211_cac_event", 
        "perf_trace_cfg80211_report_wowlan_wakeup", 
        "trace_event_raw_event_cfg80211_report_wowlan_wakeup", 
        "perf_trace_rdev_start_radar_detection", 
        "trace_event_raw_event_rdev_start_radar_detection", 
        "perf_trace_rdev_set_mcast_rate", 
        "trace_event_raw_event_rdev_set_mcast_rate", 
        "perf_trace_key_handle"
    ], 
    "metadata": {
        "output": {
            "pcap": {
                "basename": "dump.pcap", 
                "sha256": "bf2a2e545bea240dfa2ba35a183684ee84c548768d00473184415f79ce02cab5", 
                "dirname": ""
            }
        }
    }
}